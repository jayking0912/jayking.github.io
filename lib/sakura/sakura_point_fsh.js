"\n\n  #ifdef GL_ES\n  \n  //precision mediump float;\n  \n  precision highp float;\n  \n  #endif\n  \n  \n  \n  uniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\n  \n  uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n  \n  \n  \n  const vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n  \n  \n  \n  varying vec3 pposition;\n  \n  varying float psize;\n  \n  varying float palpha;\n  \n  varying float pdist;\n  \n  \n  \n  //varying mat3 rotMat;\n  \n  varying vec3 normX;\n  \n  varying vec3 normY;\n  \n  varying vec3 normZ;\n  \n  varying vec3 normal;\n  \n  \n  \n  varying float diffuse;\n  \n  varying float specular;\n  \n  varying float rstop;\n  \n  varying float distancefade;\n  \n  \n  \n  float ellipse(vec2 p, vec2 o, vec2 r) {\n  \n vec2 lp = (p - o) / r;\n  \n return length(lp) - 1.0;\n  \n  }\n  \n  \n  \n  void main(void) {\n  \n vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n  \n vec3 d = vec3(0.0, 0.0, -1.0);\n  \n float nd = normZ.z; //dot(-normZ, d);\n  \n if(abs(nd) < 0.0001) discard;\n  \n \n  \n float np = dot(normZ, p);\n  \n vec3 tp = p + d * np / nd;\n  \n vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n  \n \n  \n //angle = 15 degree\n  \n const float flwrsn = 0.258819045102521;\n  \n const float flwrcs = 0.965925826289068;\n  \n mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n  \n vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n  \n \n  \n float r;\n  \n if(flwrp.x < 0.0) {\n  \nr = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n  \n }\n  \n else {\n  \nr = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n  \n }\n  \n \n  \n if(r > rstop) discard;\n  \n \n  \n vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n  \n float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n  \n col *= vec3(1.0, grady, grady);\n  \n col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n  \n col = col * diffuse + specular;\n  \n \n  \n col = mix(fadeCol, col, distancefade);\n  \n \n  \n float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n  \n alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n  \n \n  \n gl_FragColor = vec4(col * 0.5, alpha);\n  \n  }\n  \n  "





