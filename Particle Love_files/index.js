!function e(t,n,o){function r(a,u){if(!n[a]){if(!t[a]){var s="function"==typeof require&&require;if(!u&&s)return s(a,!0);if(i)return i(a,!0);var l=new Error("Cannot find module '"+a+"'");throw l.code="MODULE_NOT_FOUND",l}var c=n[a]={exports:{}};t[a][0].call(c.exports,function(e){var n=t[a][1][e];return r(n?n:e)},c,c.exports,e,t,n,o)}return n[a].exports}for(var i="function"==typeof require&&require,a=0;a<o.length;a++)r(o[a]);return r}({1:[function(e,t,n){function o(){v&&u&&(v=!1,u.length?d=u.concat(d):p=-1,d.length&&r())}function r(){if(!v){var e=l(o);v=!0;for(var t=d.length;t;){for(u=d,d=[];++p<t;)u&&u[p].run();p=-1,t=d.length}u=null,v=!1,c(e)}}function i(e,t){this.fun=e,this.array=t}function a(){}var u,s=t.exports={},l=setTimeout,c=clearTimeout,d=[],v=!1,p=-1;s.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];d.push(new i(e,t)),1!==d.length||v||l(r,0)},i.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=a,s.addListener=a,s.once=a,s.off=a,s.removeListener=a,s.removeAllListeners=a,s.emit=a,s.binding=function(e){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(e){throw new Error("process.chdir is not supported")},s.umask=function(){return 0}},{}],2:[function(e,t,n){function o(e,t,n,o){return n=window.getComputedStyle,o=n?n(e):e.currentStyle,o?o[t.replace(/-(\w)/gi,function(e,t){return t.toUpperCase()})]:void 0}t.exports=o},{}],3:[function(e,t,n){t.exports=window.TweenMax},{}],4:[function(e,t,n){(function(e){function n(){this._listeners=[]}function o(e){e.sort(function(e,t){return e=e.p,t=t.p,e>t?1:e>t?-1:0})}function r(e,t,n,r){if(!e)throw l;n=n||0;for(var i,a,u,s=this._listeners,d=s.length;d--;)if(i=s[d],i.f===e&&i.c===t)return!1;"function"==typeof n&&(a=n,n=r,u=4),s.unshift({f:e,c:t,p:n,r:a||e,a:c.call(arguments,u||3),j:0}),o(s)}function i(t,n,o,i){if(!t)throw l;var a=this,u=function(){return a.remove.call(a,t,n),t.apply(n,c.call(arguments,0))};i=c.call(arguments,0),1===i.length&&i.push(e),i.splice(2,0,u),r.apply(a,i)}function a(e,t){if(!e)return this._listeners.length=0,!0;for(var n,o=this._listeners,r=o.length;r--;)if(n=o[r],n.f===e&&(!t||n.c===t))return n.j=1,o.splice(r,1),!0;return!1}function u(e){e=c.call(arguments,0);for(var t,n,o=this._listeners,r=o.length;r--;)if(t=o[r],t&&!t.j&&(t.j=1,t.r.apply(t.c,t.a.concat(e))===!1)){n=t;break}for(o=this._listeners,r=o.length;r--;)o[r].j=0;return n}var s=n.prototype;s.add=r,s.addOnce=i,s.remove=a,s.dispatch=u;var l="Callback function is missing!",c=Array.prototype.slice;"undefined"!=typeof t&&(t.exports=n)})()},{}],5:[function(e,t,n){function o(e,t,n){if(null!=e)for(var o=-1,r=e.length;++o<r&&t.call(n,e[o],o,e)!==!1;);}t.exports=o},{}],6:[function(e,t,n){function o(e,t,n){var o=e.length;t=null==t?0:0>t?Math.max(o+t,0):Math.min(t,o),n=null==n?o:0>n?Math.max(o+n,0):Math.min(n,o);for(var r=[];n>t;)r.push(e[t++]);return r}t.exports=o},{}],7:[function(e,t,n){function o(e){switch(s(e)){case"Object":return r(e);case"Array":return u(e);case"RegExp":return i(e);case"Date":return a(e);default:return e}}function r(e){return l(e)?c({},e):e}function i(e){var t="";return t+=e.multiline?"m":"",t+=e.global?"g":"",t+=e.ignoreCase?"i":"",new RegExp(e.source,t)}function a(e){return new Date(+e)}function u(e){return e.slice()}var s=e(14),l=e(12),c=e(22);t.exports=o},{12:12,14:14,22:22}],8:[function(e,t,n){function o(e,t){switch(s(e)){case"Object":return r(e,t);case"Array":return i(e,t);default:return a(e)}}function r(e,t){if(l(e)){var n={};return u(e,function(e,n){this[n]=o(e,t)},n),n}return t?t(e):e}function i(e,t){for(var n=[],r=-1,i=e.length;++r<i;)n[r]=o(e[r],t);return n}var a=e(7),u=e(17),s=e(14),l=e(12);t.exports=o},{12:12,14:14,17:17,7:7}],9:[function(e,t,n){var o=e(10),r=Array.isArray||function(e){return o(e,"Array")};t.exports=r},{10:10}],10:[function(e,t,n){function o(e,t){return r(e)===t}var r=e(14);t.exports=o},{14:14}],11:[function(e,t,n){function o(e){return r(e,"Object")}var r=e(10);t.exports=o},{10:10}],12:[function(e,t,n){function o(e){return!!e&&"object"==typeof e&&e.constructor===Object}t.exports=o},{}],13:[function(e,t,n){function o(e){switch(typeof e){case"string":case"number":case"boolean":return!0}return null==e}t.exports=o},{}],14:[function(e,t,n){function o(e){return null===e?"Null":e===r?"Undefined":i.exec(a.call(e))[1]}var r,i=/^\[object (.*)\]$/,a=Object.prototype.toString;t.exports=o},{}],15:[function(e,t,n){function o(e,t){return r(i(arguments,1),function(t){a(t,function(t,n){null==e[n]&&(e[n]=t)})}),e}var r=e(5),i=e(6),a=e(17);t.exports=o},{17:17,5:5,6:6}],16:[function(e,t,n){function o(){u=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],a=!0;for(var e in{toString:null})a=!1}function r(e,t,n){var r,l=0;null==a&&o();for(r in e)if(i(t,e,r,n)===!1)break;if(a)for(var c=e.constructor,d=!!c&&e===c.prototype;(r=u[l++])&&("constructor"===r&&(d||!s(e,r))||e[r]===Object.prototype[r]||i(t,e,r,n)!==!1););}function i(e,t,n,o){return e.call(o,t[n],n,t)}var a,u,s=e(19);t.exports=r},{19:19}],17:[function(e,t,n){function o(e,t,n){i(e,function(o,i){return r(e,i)?t.call(n,e[i],i,e):void 0})}var r=e(19),i=e(16);t.exports=o},{16:16,19:19}],18:[function(e,t,n){function o(e,t){for(var n=t.split("."),o=n.pop();t=n.shift();)if(e=e[t],null==e)return;return e[o]}e(13);t.exports=o},{13:13}],19:[function(e,t,n){function o(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.exports=o},{}],20:[function(e,t,n){var o=e(17),r=Object.keys||function(e){var t=[];return o(e,function(e,n){t.push(n)}),t};t.exports=r},{17:17}],21:[function(e,t,n){function o(){var e,t,n,u,s=1;for(u=i(arguments[0]);n=arguments[s++];)for(e in n)r(n,e)&&(t=n[e],a(t)&&a(u[e])?u[e]=o(u[e],t):u[e]=i(t));return u}var r=e(19),i=e(8),a=e(11);t.exports=o},{11:11,19:19,8:8}],22:[function(e,t,n){function o(e,t){for(var n,o=0,a=arguments.length;++o<a;)n=arguments[o],null!=n&&i(n,r,e);return e}function r(e,t){this[t]=e}var i=e(17);t.exports=o},{17:17}],23:[function(e,t,n){function o(e,t){for(var n,o,u,s,l=(e||"").replace("?","").split("&"),c=-1,d={};o=l[++c];)n=o.indexOf("="),s=o.substring(0,n),u=decodeURIComponent(o.substring(n+1)),t!==!1&&(u=r(u)),a(d,s)?i(d[s])?d[s].push(u):d[s]=[d[s],u]:d[s]=u;return d}var r=e(26),i=e(9),a=e(19);t.exports=o},{19:19,26:26,9:9}],24:[function(e,t,n){function o(e){e=e.replace(/#.*/,"");var t=/\?[a-zA-Z0-9\=\&\%\$\-\_\.\+\!\*\'\(\)\,]+/.exec(e);return t?decodeURIComponent(t[0].replace(/\+/g," ")):""}t.exports=o},{}],25:[function(e,t,n){function o(e,t){return r(i(e),t)}var r=e(23),i=e(24);t.exports=o},{23:23,24:24}],26:[function(e,t,n){function o(e){var t;return t=null===e||"null"===e?null:"true"===e?!0:"false"===e?!1:e===r||"undefined"===e?r:""===e||isNaN(e)?e:parseFloat(e)}var r;t.exports=o},{}],27:[function(e,t,n){t.exports=e(28),e(34),e(33),e(35),e(31),e(36),e(30),e(32)},{28:28,30:30,31:31,32:32,33:33,34:34,35:35,36:36}],28:[function(e,t,n){function o(){this.isLoading=!1,this.totalWeight=0,this.loadedWeight=0,this.itemUrls={},this.itemList=[],this.loadingSignal=new y}function r(e,t){var n,o,r,i,a,u=p(e,t);for(n=0,r=u.length;r>n;n++)for(a=u[n],o=0,i=a.items.length;i>o;o++)this.add(a.items[o],{type:a.type});return u}function i(e,t){var n=b[e];return n||(n=d(e,t&&t.type?t.type:m(e).type,t)),t&&t.onLoad&&n.onLoaded.addOnce(t.onLoad),this.itemUrls[e]||(this.itemUrls[e]=n,this.itemList.push(n),this.totalWeight+=n.weight),n}function a(e,t){var n=b[e];return n||(n=d(e,t&&t.type?t.type:m(e).type,t)),t&&t.onLoad&&n.onLoaded.addOnce(t.onLoad),T[e]?n.dispatch():n.isStartLoaded||n.load(),n}function u(e){e&&this.loadingSignal.add(e),this.isLoading=!0;var t=this.itemList.length;if(t)for(var n,o=this.itemList.splice(0,this.itemList.length),r=0;t>r;r++)n=o[r],n.onLoaded.addOnce(c,this,-1024,n,o),n.hasLoading&&n.loadingSignal.add(s,this,-1024,n,o,_),T[n.url]?n.dispatch(c):n.isStartLoaded||n.load();else c.call(this,_,this.itemList)}function s(e,t,n,o,r){e&&!e.isLoaded&&1===o||(r===_&&(this.loadedWeight=l(t),r=this.loadedWeight/this.totalWeight),n=n||this.loadingSignal,n.dispatch(r,e))}function l(e){for(var t=0,n=0,o=e.length;o>n;n++)t+=e[n].loadedWeight;return t}function c(e,t){this.loadedWeight=l(t);var n=this.loadingSignal;this.loadedWeight===this.totalWeight?(this.isLoading=!1,this.loadedWeight=0,this.totalWeight=0,this.loadingSignal=new y,this._onLoading(e,t,n,1,1)):this._onLoading(e,t,n,1,this.loadedWeight/this.totalWeight)}function d(e,t,n){return new E[t](e,n)}function v(e){E[e.type]||(M.push(e),E[e.type]=e)}function p(e,t){var n,o,r=e.length,i=[];if(r&&"string"!=typeof e)for(n=0;r>n;n++)o=m(e[n],t),o&&(i=i.concat(o));else o=m(e,t),o&&(i=i.concat(o));return i}function m(e,t){var n,o,r,i,a;if(t)i=E[t],r=i.retrieve(e);else for(n=0,o=M.length;o>n;n++){if(i=M[n],a=i.type,"string"==typeof e){if(f(e,i)){r=[e];break}}else if(r=i.retrieve(e),r&&r.length&&"string"==typeof r[0]&&f(r[0],i))break;r=_,a=_}return r?{type:t||a,items:r}:void 0}function f(e,t){if(e){for(var n=h(e),o=t.extensions,r=o.length;r--;)if(n===o[r])return!0;return!1}}function h(e){return e.split(".").pop().split(/\#|\?/)[0]}function x(){return new o}function g(){var e=[],t=[];for(var n in b)e.push(n),T[n]||t.push(b[n]);console.log({added:e,notLoaded:t})}var _,y=e(4),S=o.prototype;S.addChunk=r,S.add=i,S.load=a,S.start=u,S._onLoading=s;var w=t.exports=x();w.version="0.1.14",w.register=v,w.retrieveAll=p,w.retrieve=m,w.testExtensions=f,w.create=x,w.load=a,w.check=g;var b=w.addedItems={},T=w.loadedItems={},M=w.ITEM_CLASS_LIST=[],E=w.ITEM_CLASSES={}},{4:4}],29:[function(e,t,n){function o(e,t){if(e){this.url=e,this.loadedWeight=0,this.weight=1;for(var n in t)this[n]=t[n];this.type||(this.type=this.constructor.type),this.hasLoading&&(this.loadingSignal=new s,this.loadingSignal.add(a,this),this.onLoading&&this.loadingSignal.add(this.onLoading));var o=this;this.boundOnLoad=function(){o._onLoad()},this.onLoaded=new s,l.addedItems[e]=this}}function r(){this.isStartLoaded=!0}function i(){this.isLoaded=!0,this.loadedWeight=this.weight,l.loadedItems[this.url]=this,this.onLoaded.dispatch(this.content)}function a(e){this.loadedWeight=this.weight*e}function u(){this.hasLoading&&this.loadingSignal.remove(),this.onLoaded.dispatch(this.content)}var s=e(4),l=e(28);t.exports=o;var c=o.prototype;c.load=r,c._onLoad=i,c._onLoading=a,c.dispatch=u,o.extensions=[],o.retrieve=function(){return!1}},{28:28,4:4}],30:[function(e,t,n){function o(e,t){e&&(u.constructor.call(this,e,t),!this.loadFunc&&console&&console[console.error||console.log]("require loadFunc in the config object."))}function r(){var e=this;this.loadFunc(this.url,function(t){e.content=t,u._onLoad.call(e)},this.loadingSignal)}var i=e(29),a=e(28);t.exports=o,o.type="any",o.extensions=[],a.register(o),o.retrieve=function(){return!1};var u=i.prototype,s=o.prototype=new i;s.constructor=o,s.load=r},{28:28,29:29}],31:[function(e,t,n){function o(e,t){if(e){this.loadThrough=t&&t.loadThrough!==a?t.loadThrough:!0,l.constructor.apply(this,arguments);try{this.content=new Audio}catch(n){this.content=document.createElement("audio")}}}function r(){l.load.apply(this,arguments);var e=this,t=e.content;t.src=this.url,this.loadThrough?t.addEventListener("canplaythrough",this.boundOnLoad,!1):t.addEventListener("canplay",this.boundOnLoad,!1),t.load()}function i(){this.content.removeEventListener("canplaythrough",this.boundOnLoad,!1),this.content.removeEventListener("canplay",this.boundOnLoad,!1),this.isLoaded||l._onLoad.call(this)}var a,u=e(29),s=e(28);t.exports=o,o.type="audio",o.extensions=["mp3","ogg"],s.register(o),o.retrieve=function(e){return!1};var l=u.prototype,c=o.prototype=new u;c.constructor=o,c.load=r,c._onLoad=i},{28:28,29:29}],32:[function(e,t,n){function o(e,t){e&&(c.constructor.apply(this,arguments),this.content=new Image)}function r(){c.load.apply(this,arguments);var e=this.content;e.src=this.url,e.complete?this._onLoad():e.onload=this.boundOnLoad}function i(){delete this.content.onload,this.width=this.content.width,this.height=this.content.height,c._onLoad.call(this)}function a(e){return 0!==e.indexOf("data:")}var u=e(29),s=e(2),l=e(28);t.exports=o;var c=u.prototype,d=o.prototype=new u;d.constructor=o,d.load=r,d._onLoad=i,o.retrieve=function(e){if(e.nodeType&&e.style){var t=[];"img"==e.nodeName.toLowerCase()&&e.src.indexOf(";")<0&&t.push(e.src),s(e,"background-image").replace(/s?url\(\s*?[\'\"]?([^;]*?)[\'\"]?\s*?\)/g,function(e,n){t.push(n)});for(var n=t.length;n--;)a(t[n])||t.splice(n,1);return t.length?t:!1}return"string"==typeof e?[e]:!1},o.type="image",o.extensions=["jpg","gif","png"],l.register(o)},{2:2,28:28,29:29}],33:[function(require,module,exports){function JSONItem(e){e&&_super.constructor.apply(this,arguments)}function _onLoad(){this.content&&(this.content=window.JSON&&window.JSON.parse?JSON.parse(this.content.toString()):eval(this.content.toString())),_super._onLoad.call(this)}var TextItem=require(35),quickLoader=require(28);module.exports=JSONItem,JSONItem.type="json",JSONItem.extensions=["json"],quickLoader.register(JSONItem),JSONItem.retrieve=function(){return!1};var _super=TextItem.prototype,_p=JSONItem.prototype=new TextItem;_p.constructor=JSONItem,_p._onLoad=_onLoad},{28:28,35:35}],34:[function(e,t,n){function o(){return"_jsonp"+(new Date).getTime()+~~(1e8*Math.random())}function r(e){e&&s.constructor.apply(this,arguments)}function i(e){s.load.apply(this,arguments);var t=this,n=this.url.lastIndexOf("=")+1,r=this.url.substr(0,n),i=this.url.substr(n);0===i.length?(i=o(),this.jsonpCallback=e):this.jsonpCallback=this.jsonpCallback||window[i],window[i]=function(e){a.parentNode&&a.parentNode.removeChild(a),t.content=e,t._onLoad()};var a=document.createElement("script");a.type="text/javascript",a.src=r+i,document.getElementsByTagName("head")[0].appendChild(a)}var a=e(29),u=e(28);t.exports=r,r.type="jsonp",r.extensions=[],u.register(r),r.retrieve=function(e){return"string"==typeof e&&e.indexOf("=")>-1?[e]:!1};var s=a.prototype,l=r.prototype=new a;l.constructor=r,l.load=i},{28:28,29:29}],35:[function(e,t,n){function o(e){e&&v.constructor.apply(this,arguments)}function r(){v.load.apply(this,arguments);var e,t=this;e=d?this.xmlhttp=new XMLHttpRequest:this.xmlhttp=new ActiveXObject("Microsoft.XMLHTTP"),this.hasLoading&&(e.onprogress=function(e){t._onXmlHttpProgress(e)}),e.onreadystatechange=function(){t._onXmlHttpChange()},e.open("GET",this.url,!0),d?e.send(null):e.send()}function i(e){this.loadingSignal.dispatch(e.loaded/e.total)}function a(){4==this.xmlhttp.readyState&&200==this.xmlhttp.status&&(this.content=this.xmlhttp.responseText,this._onLoad())}function u(){this.content&&(this.xmlhttp=s),v._onLoad.call(this)}var s,l=e(29),c=e(28),d=!!window.XMLHttpRequest;t.exports=o,o.type="text",o.extensions=["html","txt","svg"],c.register(o),o.retrieve=function(){return!1};var v=l.prototype,p=o.prototype=new l;p.constructor=o,p.load=r,p._onXmlHttpChange=a,p._onXmlHttpProgress=i,p._onLoad=u},{28:28,29:29}],36:[function(e,t,n){function o(e,t){if(e){this.loadThrough=t&&t.loadThrough!==a?t.loadThrough:!0,l.constructor.apply(this,arguments);try{this.content=new Video}catch(n){this.content=document.createElement("video")}}}function r(){l.load.apply(this,arguments);var e=this.content;e.preload="auto",e.src=this.url,this.loadThrough?e.addEventListener("canplaythrough",this.boundOnLoad,!1):e.addEventListener("canplay",this.boundOnLoad,!1),e.load()}function i(){this.content.removeEventListener("canplaythrough",this.boundOnLoad),this.content.removeEventListener("canplay",this.boundOnLoad),this.isLoaded||l._onLoad.call(this)}var a,u=e(29),s=e(28);t.exports=o,o.type="video",o.extensions=["mp4","webm","ogv"],s.register(o),o.retrieve=function(e){return!1};var l=u.prototype,c=o.prototype=new u;c.constructor=o,c.load=r,c._onLoad=i},{28:28,29:29}],37:[function(e,t,n){(function(n){for(var o=e(38),r="undefined"==typeof window?n:window,i=["moz","webkit"],a="AnimationFrame",u=r["request"+a],s=r["cancel"+a]||r["cancelRequest"+a],l=0;!u&&l<i.length;l++)u=r[i[l]+"Request"+a],s=r[i[l]+"Cancel"+a]||r[i[l]+"CancelRequest"+a];if(!u||!s){var c=0,d=0,v=[],p=1e3/60;u=function(e){if(0===v.length){var t=o(),n=Math.max(0,p-(t-c));c=n+t,setTimeout(function(){var e=v.slice(0);v.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(c)}catch(n){setTimeout(function(){throw n},0)}},Math.round(n))}return v.push({handle:++d,callback:e,cancelled:!1}),d},s=function(e){for(var t=0;t<v.length;t++)v[t].handle===e&&(v[t].cancelled=!0)}}t.exports=function(e){return u.call(r,e)},t.exports.cancel=function(){s.apply(r,arguments)},t.exports.polyfill=function(){r.requestAnimationFrame=u,r.cancelAnimationFrame=s}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{38:38}],38:[function(e,t,n){(function(e){(function(){var n,o,r;"undefined"!=typeof performance&&null!==performance&&performance.now?t.exports=function(){return performance.now()}:"undefined"!=typeof e&&null!==e&&e.hrtime?(t.exports=function(){return(n()-r)/1e6},o=e.hrtime,n=function(){var e;return e=o(),1e9*e[0]+e[1]},r=n()):Date.now?(t.exports=function(){return Date.now()-r},r=Date.now()):(t.exports=function(){return(new Date).getTime()-r},r=(new Date).getTime())}).call(this)}).call(this,e(1))},{1:1}],39:[function(e,t,n){t.exports=window.THREE},{}],40:[function(e,t,n){function o(e){if(n.hasInitialized)throw"core.js seems to be initialized twice.";v(n,{fov:45,near:50,far:5e3},e),f=n.renderer=n.renderer||new c.WebGLRenderer(n),m=n.gl=f.getContext(),n.isEnabled=r(),h=n.camera=new c.PerspectiveCamera(n.fov,1,n.near,n.far),x=n.scene=new c.Scene,g=n.ignoredMaterial=new c.Material;var t=f.renderBufferDirect;f.renderBufferDirect=function(e,n,o,r){r!==g&&t.apply(this,arguments)},p.init(f),n.hasInitialized=!0}function r(){for(var e,t,n=!0,o=0,r=_.length;r>o;o++)e=_[o],t=e.results=s(e.getMethod,e.str),t||(e.isStrict&&(n=!1),console.log(e.msg));return n}function i(e,t,n){u("getParameter",e,t,n)}function a(e,t,n){u("getExtension",e,t,n)}function u(e,t,n,o){var r=_[t];r&&n?r.isStrict=n:_[t]={getMethod:e,str:t,isStrict:n,msg:o}}function s(e,t){return t=t.indexOf(".")>0?d(n,t):t,m[e](t)}var l,c=e(39),d=e(18),v=e(22),p=e(42);n.init=o,n.requireParameter=i,n.requireExtension=a,n.hasInitialized=!1,n.isEnabled=l;var m=n.gl=l,f=n.renderer=l,h=n.camera=l,x=n.scene=l,g=n.ignoredMaterial=l,_=n.requiredTestObjects={}},{18:18,22:22,39:39,42:42}],41:[function(e,t,n){var o=(e(25),e(20));n.isMobile=/(iPad|iPhone|Android)/i.test(navigator.userAgent),n.assetPath="./",n.qualityList=["low","medium","high"],n.quality=0,n.bgColor="#060a11",n.emittersMotionTextureWidth=1,n.emittersMotionTextureHeight=32,n.particlesMotionTextureWidth=512,n.particlesMotionTextureHeight=512,n.useControls=!0,n.initialAmimation=0,n.speed=3,n.curlSize=1e-4,n.mouseRatio=1,n.mouseStrength=.03,n.particlesOuterSpeed=.65,n.particlesEmittingSpeed=1,n.particlesEmittingStrength=1,n.particlesEmittingFriction=2,n.skipRendering=!1,n.motionBlur=!0;var r=n.motionBlurQualityMap={best:1,high:.5,medium:1/3,low:.25};n.motionBlurQualityList=o(r),n.motionBlurQuality="high"},{20:20,25:25}],42:[function(e,t,n){function o(e){c||(c=e,f=n.rawShaderPrefix="precision "+c.capabilities.precision+" float;\n",v=new m.Scene,p=new m.Camera,p.position.z=1,x=n.copyMaterial=new m.RawShaderMaterial({uniforms:{u_texture:{type:"t",value:l}},vertexShader:h=n.vertexShader=f+"#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\nvarying vec2 v_uv;\n\nvoid main() {\n    v_uv = uv;\n    gl_Position = vec4( position, 1.0 );\n}\n",fragmentShader:f+"#define GLSLIFY 1\nuniform sampler2D u_texture;\n\nvarying vec2 v_uv;\n\nvoid main() {\n    gl_FragColor = texture2D( u_texture, v_uv );\n}\n"}),d=new m.Mesh(new m.PlaneBufferGeometry(2,2),x),v.add(d))}function r(e,t){d.material=x,x.uniforms.u_texture.value=e,t?c.render(v,p,t):c.render(v,p)}function i(e,t){d.material=e,t?c.render(v,p,t):c.render(v,p)}function a(e,t,n,o,r,i){var a=new m.WebGLRenderTarget(e||1,t||1,{format:n||m.RGBFormat,type:o||m.UnsignedByteType,minFilter:r||m.LinearFilter,magFilter:i||m.LinearFilter,depthBuffer:!1,stencilBuffer:!1});return a.texture.generateMipMaps=!1,a}function u(){return{autoClearColor:c.autoClearColor,clearColor:c.getClearColor().getHex(),clearAlpha:c.getClearAlpha()}}function s(e){c.setClearColor(e.clearColor,e.clearAlpha),c.autoClearColor=e.autoClearColor}var l,c,d,v,p,m=e(39),f=n.rawShaderPrefix=l,h=n.vertexShader=l,x=n.copyMaterial=l;n.init=o,n.copy=r,n.render=i,n.createRenderTarget=a,n.getColorState=u,n.setColorState=s},{39:39}],43:[function(e,t,n){function o(e){return c={},e.replace(p,a)}function r(e){for(var t=!1;t||d>0;)d=0,e=e.replace(f,u),e=e.replace(m,u),t=!1;return e}function i(e){return e.replace(h,s)}function a(e,t,n){return c[t.trim()]=n,""}function u(e,t){var n="// chunk_begin("+t+");\n"+v.ShaderChunk[t]+"\n// chunk_end("+t+");\\n";for(var o in c)n=n.replace(o,c[o]);return n}function s(e,t){return t}function l(e){return e=o(e),e=r(e),i(e)}var c,d,v=e(39),p=/\/\/\s?chunk_replace\s(.+)([\d\D]+)\/\/\s?end_chunk_replace/gm,m=/\s?#include\s?<\s?(\w+)\s?>/g,f=/\/\/\s?chunk\(\s?(\w+)\s?\);/g,h=/GLOBAL_VAR_([^\.\)\;\,\s]+)(_\d+)/g;t.exports=l},{39:39}],44:[function(e,t,n){function o(e){g(b,{assetPath:"./"},e),R.preload(),A.preload(),_.start(function(e){1===e&&r()})}function r(e){g(b,{inputEventTarget:v,useControls:!1,useGui:!0},e),T.init({canvas:document.querySelector("canvas"),premultipliedAlpha:!1,antialias:!1,alpha:!0}),b.resolution=new w.Vector2,h=T.renderer,f=T.scene,f.fog=new w.FogExp2(395793,.001),m=b.camera=T.camera,m.position.z=3e3,b.tmpMouse=new w.Vector2(0,0),b.mouse=new w.Vector2(0,0),b.prevMouse=new w.Vector2(0,0),b.mouseBound=new w.Vector2(0,300),b.projectionMatrix=new w.Matrix4,b.unprojectionMatrix=new w.Matrix4,b.prevCamera=T.camera.clone();var t=new w.AmbientLight(16777215);f.add(t),M.init(h,f,m),h.setClearColor(b.bgColor),R.init(),A.init(),f.add(N.mesh),E.linesRenderTargetScale=b.motionBlurQualityMap[b.motionBlurQuality],b.useGui&&window.dat,C.init(),window.addEventListener("visibilitychange",i),window.addEventListener("resize",s),window.addEventListener("mousemove",u),window.addEventListener("touchmove",a(u)),S.set(b,{initialAmimation:0}),S.to(b,3,{initialAmimation:1,ease:"easeInOutSine"}),S.to(m.position,3,{z:1e3,ease:"easeOutSine"}),s(),i(),l()}function i(){z=Date.now(),d()}function a(e){return function(t){e(t.changedTouches[0])}}function u(e){b.tmpMouse.set(e.pageX/window.innerWidth*2-1,2*-(e.pageY/window.innerHeight)+1)}function s(){L=b.width=window.innerWidth,P=b.height=window.innerHeight,C.resize(L,P),b.resolution.set(L,P),M.resize(L,P)}function l(){var e=Date.now();x=y(l),b.useStats&&p.begin(),c((e-z)/1e3,e/1e3),b.useStats&&p.end(),z=e}function c(e,t){if(!b.skipRendering){e=e||0,b.deltaRatio=e/.016,t=t||Date.now();var n=b.speed+(1-b.initialAmimation)*e*100;e*=n,m.lookAt(f.position),m.updateMatrixWorld(),b.mouse.lerp(b.tmpMouse,.05),b.projectionMatrix.multiplyMatrices(b.camera.projectionMatrix,b.camera.matrixWorldInverse),b.unprojectionMatrix.getInverse(b.projectionMatrix),b.mouseBound.x=Math.min(b.mouseBound.x,b.mouseBound.y),I.positionUniforms.u_speed.value=n,R.render(e,t),D.positionUniforms.u_speed.value=n,A.render(e,t),M.render(e,t),d(),b.prevMouse.copy(b.mouse)}}function d(){b.prevCamera.matrixWorldInverse.copy(b.camera.matrixWorldInverse),b.prevCamera.projectionMatrix.copy(b.camera.projectionMatrix)}var v,p,m,f,h,x,g=e(22),_=e(27),y=e(37),S=e(3),w=e(39),b=e(41),T=e(40),M=e(59),E=(e(53),e(56),e(58)),R=(e(54),e(45)),I=e(46),A=e(47),D=e(48),N=e(50),C=e(51),L=0,P=0,z=0;C.preload(o)},{22:22,27:27,3:3,37:37,39:39,40:40,41:41,45:45,46:46,47:47,48:48,50:50,51:51,53:53,54:54,56:56,58:58,59:59}],45:[function(e,t,n){function o(){}function r(){l=n.mesh=new u.Object3D,s.init()}function i(e){s.update(e)}var a,u=e(39),s=e(46),l=n.mesh=a;n.preload=o,n.init=r,n.render=i},{39:39,46:46}],46:[function(e,t,n){function o(){var e=c.emittersMotionTextureWidth,t=c.emittersMotionTextureHeight;u=new v.RawShaderMaterial({uniforms:n.positionUniforms={u_defaultPositionTexture:{type:"t",value:a},u_positionTexture:{type:"t",value:a},u_speed:{type:"f",value:1},u_time:{type:"f",value:0},u_deltaTime:{type:"f",value:0},u_deltaRatio:{type:"f",value:1},u_curlSize:{type:"f",value:.005}},vertexShader:m.vertexShader,fragmentShader:m.rawShaderPrefix+"\n\n"+p("#define GLSLIFY 1\nuniform sampler2D u_defaultPositionTexture;\nuniform sampler2D u_positionTexture;\nuniform float u_time;\nuniform float u_speed;\nuniform float u_deltaRatio;\nuniform float u_curlSize;\n\nvarying vec2 v_uv;\n\nvec4 mod289(vec4 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nfloat mod289(float x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat permute(float x) {\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat taylorInvSqrt(float r) {\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 grad4(float j, vec4 ip) {\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n    vec4 p,s;\n\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n    s = vec4(lessThan(p, vec4(0.0)));\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n    return p;\n}\n\n#define F4 0.309016994374947451\n\nvec4 simplexNoiseDerivatives (vec4 v) {\n    const vec4  C = vec4( 0.138196601125011,0.276393202250021,0.414589803375032,-0.447213595499958);\n\n    vec4 i  = floor(v + dot(v, vec4(F4)) );\n    vec4 x0 = v -   i + dot(i, C.xxxx);\n\n    vec4 i0;\n    vec3 isX = step( x0.yzw, x0.xxx );\n    vec3 isYZ = step( x0.zww, x0.yyz );\n    i0.x = isX.x + isX.y + isX.z;\n    i0.yzw = 1.0 - isX;\n    i0.y += isYZ.x + isYZ.y;\n    i0.zw += 1.0 - isYZ.xy;\n    i0.z += isYZ.z;\n    i0.w += 1.0 - isYZ.z;\n\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n    vec4 x1 = x0 - i1 + C.xxxx;\n    vec4 x2 = x0 - i2 + C.yyyy;\n    vec4 x3 = x0 - i3 + C.zzzz;\n    vec4 x4 = x0 + C.wwww;\n\n    i = mod289(i);\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n    vec4 j1 = permute( permute( permute( permute (\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n    vec4 p0 = grad4(j0,   ip);\n    vec4 p1 = grad4(j1.x, ip);\n    vec4 p2 = grad4(j1.y, ip);\n    vec4 p3 = grad4(j1.z, ip);\n    vec4 p4 = grad4(j1.w, ip);\n\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n    p4 *= taylorInvSqrt(dot(p4,p4));\n\n    vec3 values0 = vec3(dot(p0, x0), dot(p1, x1), dot(p2, x2)); //value of contributions from each corner at point\n    vec2 values1 = vec2(dot(p3, x3), dot(p4, x4));\n\n    vec3 m0 = max(0.5 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0); //(0.5 - x^2) where x is the distance\n    vec2 m1 = max(0.5 - vec2(dot(x3,x3), dot(x4,x4)), 0.0);\n\n    vec3 temp0 = -6.0 * m0 * m0 * values0;\n    vec2 temp1 = -6.0 * m1 * m1 * values1;\n\n    vec3 mmm0 = m0 * m0 * m0;\n    vec2 mmm1 = m1 * m1 * m1;\n\n    float dx = temp0[0] * x0.x + temp0[1] * x1.x + temp0[2] * x2.x + temp1[0] * x3.x + temp1[1] * x4.x + mmm0[0] * p0.x + mmm0[1] * p1.x + mmm0[2] * p2.x + mmm1[0] * p3.x + mmm1[1] * p4.x;\n    float dy = temp0[0] * x0.y + temp0[1] * x1.y + temp0[2] * x2.y + temp1[0] * x3.y + temp1[1] * x4.y + mmm0[0] * p0.y + mmm0[1] * p1.y + mmm0[2] * p2.y + mmm1[0] * p3.y + mmm1[1] * p4.y;\n    float dz = temp0[0] * x0.z + temp0[1] * x1.z + temp0[2] * x2.z + temp1[0] * x3.z + temp1[1] * x4.z + mmm0[0] * p0.z + mmm0[1] * p1.z + mmm0[2] * p2.z + mmm1[0] * p3.z + mmm1[1] * p4.z;\n    float dw = temp0[0] * x0.w + temp0[1] * x1.w + temp0[2] * x2.w + temp1[0] * x3.w + temp1[1] * x4.w + mmm0[0] * p0.w + mmm0[1] * p1.w + mmm0[2] * p2.w + mmm1[0] * p3.w + mmm1[1] * p4.w;\n\n    return vec4(dx, dy, dz, dw) * 49.0;\n}\n\nvec3 curl( in vec3 p, in float noiseTime, in float persistence ) {\n\n    vec4 xNoisePotentialDerivatives = vec4(0.0);\n    vec4 yNoisePotentialDerivatives = vec4(0.0);\n    vec4 zNoisePotentialDerivatives = vec4(0.0);\n\n    for (int i = 0; i < 3; ++i) {\n\n        float twoPowI = pow(2.0, float(i));\n        float scale = 0.5 * twoPowI * pow(persistence, float(i));\n\n        xNoisePotentialDerivatives += simplexNoiseDerivatives(vec4(p * twoPowI, noiseTime)) * scale;\n        yNoisePotentialDerivatives += simplexNoiseDerivatives(vec4((p + vec3(123.4, 129845.6, -1239.1)) * twoPowI, noiseTime)) * scale;\n        zNoisePotentialDerivatives += simplexNoiseDerivatives(vec4((p + vec3(-9519.0, 9051.0, -123.0)) * twoPowI, noiseTime)) * scale;\n    }\n\n    return vec3(\n        zNoisePotentialDerivatives[1] - yNoisePotentialDerivatives[2],\n        xNoisePotentialDerivatives[2] - zNoisePotentialDerivatives[0],\n        yNoisePotentialDerivatives[0] - xNoisePotentialDerivatives[1]\n    );\n\n}\n\n#define PI 3.141592\n#define PI2 6.283184\n\nvoid main() {\n\n    vec2 uv = vec2(0.0, v_uv.y);\n    vec4 positionInfo = texture2D( u_positionTexture, uv );\n    vec3 position = positionInfo.xyz;\n    float color;\n\n    vec4 randoms = texture2D( u_defaultPositionTexture, uv );\n    vec3 targetPos = vec3(\n        sin(u_time * (randoms.x - 0.5) + randoms.y * PI2) * 150.0,\n        sin(u_time * (randoms.z - 0.5) + randoms.z * PI2) * 150.0,\n        sin(u_time * (randoms.y - 0.5) + randoms.x * PI2) * 150.0\n    );\n\n    vec3 delta = targetPos - position;\n    position += delta * smoothstep(300.0, 500.0, length(delta)) * u_deltaRatio;\n    position += curl(position * u_curlSize, u_time * 0.2, 0.2) * u_speed * 2.0;\n\n    gl_FragColor = vec4(position, positionInfo.w);\n\n}\n"),blending:v.NoBlending,transparent:!1,depthWrite:!1,depthTest:!1}),s=m.createRenderTarget(e,t,v.RGBAFormat,v.FloatType,v.NearestFilter,v.NearestFilter),l=s.clone(),r(),m.copy(f,s),m.copy(f,l)}function r(){for(var e,t=c.emittersMotionTextureWidth,o=c.emittersMotionTextureHeight,r=t*o,i=new Float32Array(4*r),a=0;r>a;a++)e=4*a,i[e+0]=Math.random(),i[e+1]=Math.random(),i[e+2]=Math.random(),i[e+3]=Math.random();var u=new v.DataTexture(i,t,o,v.RGBAFormat,v.FloatType);u.minFilter=v.NearestFilter,u.magFilter=v.NearestFilter,u.needsUpdate=!0,u.generateMipmaps=!1,u.flipY=!1,f=n.defaultRenderTarget=u}function i(e){var t=m.getColorState();d.renderer.autoClearColor=!1;var o=s;s=l,l=o,u.uniforms.u_defaultPositionTexture.value=f,u.uniforms.u_positionTexture.value=l,u.uniforms.u_time.value+=e,u.uniforms.u_deltaTime.value=e,u.uniforms.u_deltaRatio.value=c.deltaRatio,u.uniforms.u_curlSize.value=c.curlSize,m.render(u,s),h&&m.copy(s,l),n.positionRenderTarget=s,n.prevPositionRenderTarget=l,m.setColorState(t),h=!1}var a,u,s,l,c=e(41),d=e(40),v=e(39),p=e(43),m=e(42),f=n.defaultRenderTarget=a,h=!0;n.positionRenderTarget=a,n.prevPositionRenderTarget=a,n.rotationRenderTarget=a,n.prevRotationRenderTarget=a,n.init=o,n.update=i,d.requireParameter("gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS",!0,"No support for vertex shader textures!"),d.requireExtension("OES_texture_float",!0,"No OES_texture_float support for float textures!")},{39:39,40:40,41:41,42:42,43:43}],47:[function(e,t,n){function o(){l.preload()}function r(){c=n.mesh=new u.Object3D,s.init(),l.init()}function i(e){s.update(e),l.update(e)}var a,u=e(39),s=e(48),l=e(50),c=n.mesh=a;n.preload=o,n.init=r,n.render=i},{39:39,48:48,50:50}],48:[function(e,t,n){function o(){var e=d.particlesMotionTextureWidth,t=d.particlesMotionTextureHeight;u=new p.RawShaderMaterial({uniforms:n.positionUniforms={
u_emittersPositionTexture:{type:"t",value:a},u_defaultPositionTexture:{type:"t",value:a},u_positionTexture:{type:"t",value:a},u_speed:{type:"f",value:1},u_time:{type:"f",value:0},u_deltaTime:{type:"f",value:0},u_dieSpeed:{type:"f",value:1},u_outerSpeed:{type:"f",value:1},u_emittingSpeed:{type:"f",value:1},u_curlSize:{type:"f",value:.005},u_emittingStrength:{type:"f",value:10},u_emittingFriction:{type:"f",value:3},u_deltaRatio:{type:"f",value:1},u_mouseRatio:{type:"float",value:0},u_mouseStrength:{type:"float",value:0},u_mouseBound:{type:"v2",value:d.mouseBound},u_mouse:{type:"v2",value:d.mouse},u_prevMouse:{type:"v2",value:d.prevMouse},u_screenResolution:{type:"v2",value:d.resolution},u_projectionMatrix:{type:"m4",value:d.projectionMatrix},u_unprojectionMatrix:{type:"m4",value:d.unprojectionMatrix}},vertexShader:h.vertexShader,fragmentShader:h.rawShaderPrefix+f("#define GLSLIFY 1\nuniform sampler2D u_defaultPositionTexture;\nuniform sampler2D u_emittersPositionTexture;\nuniform sampler2D u_positionTexture;\n\nuniform float u_time;\nuniform float u_speed;\nuniform float u_deltaTime;\nuniform float u_curlSize;\nuniform float u_dieSpeed;\nuniform float u_outerSpeed;\nuniform float u_emittingSpeed;\nuniform float u_emittingStrength;\nuniform float u_emittingFriction;\nuniform float u_deltaRatio;\n\nuniform float u_mouseRatio;\nuniform float u_mouseStrength;\nuniform vec2 u_mouseBound;\nuniform vec2 u_mouse;\nuniform vec2 u_screenResolution;\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_unprojectionMatrix;\n\nvarying vec2 v_uv;\n\nvec4 mod289(vec4 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nfloat mod289(float x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat permute(float x) {\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat taylorInvSqrt(float r) {\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 grad4(float j, vec4 ip) {\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n    vec4 p,s;\n\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n    s = vec4(lessThan(p, vec4(0.0)));\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n    return p;\n}\n\n#define F4 0.309016994374947451\n\nvec4 simplexNoiseDerivatives (vec4 v) {\n    const vec4  C = vec4( 0.138196601125011,0.276393202250021,0.414589803375032,-0.447213595499958);\n\n    vec4 i  = floor(v + dot(v, vec4(F4)) );\n    vec4 x0 = v -   i + dot(i, C.xxxx);\n\n    vec4 i0;\n    vec3 isX = step( x0.yzw, x0.xxx );\n    vec3 isYZ = step( x0.zww, x0.yyz );\n    i0.x = isX.x + isX.y + isX.z;\n    i0.yzw = 1.0 - isX;\n    i0.y += isYZ.x + isYZ.y;\n    i0.zw += 1.0 - isYZ.xy;\n    i0.z += isYZ.z;\n    i0.w += 1.0 - isYZ.z;\n\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n    vec4 x1 = x0 - i1 + C.xxxx;\n    vec4 x2 = x0 - i2 + C.yyyy;\n    vec4 x3 = x0 - i3 + C.zzzz;\n    vec4 x4 = x0 + C.wwww;\n\n    i = mod289(i);\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n    vec4 j1 = permute( permute( permute( permute (\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n    vec4 p0 = grad4(j0,   ip);\n    vec4 p1 = grad4(j1.x, ip);\n    vec4 p2 = grad4(j1.y, ip);\n    vec4 p3 = grad4(j1.z, ip);\n    vec4 p4 = grad4(j1.w, ip);\n\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n    p4 *= taylorInvSqrt(dot(p4,p4));\n\n    vec3 values0 = vec3(dot(p0, x0), dot(p1, x1), dot(p2, x2)); //value of contributions from each corner at point\n    vec2 values1 = vec2(dot(p3, x3), dot(p4, x4));\n\n    vec3 m0 = max(0.5 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0); //(0.5 - x^2) where x is the distance\n    vec2 m1 = max(0.5 - vec2(dot(x3,x3), dot(x4,x4)), 0.0);\n\n    vec3 temp0 = -6.0 * m0 * m0 * values0;\n    vec2 temp1 = -6.0 * m1 * m1 * values1;\n\n    vec3 mmm0 = m0 * m0 * m0;\n    vec2 mmm1 = m1 * m1 * m1;\n\n    float dx = temp0[0] * x0.x + temp0[1] * x1.x + temp0[2] * x2.x + temp1[0] * x3.x + temp1[1] * x4.x + mmm0[0] * p0.x + mmm0[1] * p1.x + mmm0[2] * p2.x + mmm1[0] * p3.x + mmm1[1] * p4.x;\n    float dy = temp0[0] * x0.y + temp0[1] * x1.y + temp0[2] * x2.y + temp1[0] * x3.y + temp1[1] * x4.y + mmm0[0] * p0.y + mmm0[1] * p1.y + mmm0[2] * p2.y + mmm1[0] * p3.y + mmm1[1] * p4.y;\n    float dz = temp0[0] * x0.z + temp0[1] * x1.z + temp0[2] * x2.z + temp1[0] * x3.z + temp1[1] * x4.z + mmm0[0] * p0.z + mmm0[1] * p1.z + mmm0[2] * p2.z + mmm1[0] * p3.z + mmm1[1] * p4.z;\n    float dw = temp0[0] * x0.w + temp0[1] * x1.w + temp0[2] * x2.w + temp1[0] * x3.w + temp1[1] * x4.w + mmm0[0] * p0.w + mmm0[1] * p1.w + mmm0[2] * p2.w + mmm1[0] * p3.w + mmm1[1] * p4.w;\n\n    return vec4(dx, dy, dz, dw) * 49.0;\n}\n\nvec3 curl( in vec3 p, in float noiseTime, in float persistence ) {\n\n    vec4 xNoisePotentialDerivatives = vec4(0.0);\n    vec4 yNoisePotentialDerivatives = vec4(0.0);\n    vec4 zNoisePotentialDerivatives = vec4(0.0);\n\n    for (int i = 0; i < 3; ++i) {\n\n        float twoPowI = pow(2.0, float(i));\n        float scale = 0.5 * twoPowI * pow(persistence, float(i));\n\n        xNoisePotentialDerivatives += simplexNoiseDerivatives(vec4(p * twoPowI, noiseTime)) * scale;\n        yNoisePotentialDerivatives += simplexNoiseDerivatives(vec4((p + vec3(123.4, 129845.6, -1239.1)) * twoPowI, noiseTime)) * scale;\n        zNoisePotentialDerivatives += simplexNoiseDerivatives(vec4((p + vec3(-9519.0, 9051.0, -123.0)) * twoPowI, noiseTime)) * scale;\n    }\n\n    return vec3(\n        zNoisePotentialDerivatives[1] - yNoisePotentialDerivatives[2],\n        xNoisePotentialDerivatives[2] - zNoisePotentialDerivatives[0],\n        yNoisePotentialDerivatives[0] - xNoisePotentialDerivatives[1]\n    );\n\n}\n\nvoid main() {\n\n    vec4 positionInfo = texture2D( u_positionTexture, v_uv );\n    vec3 position = positionInfo.xyz;\n    float color;\n    float life = positionInfo.w - u_deltaTime * u_dieSpeed * 0.3;\n    // float life = positionInfo.w - 0.016 * 0.2;\n\n    if(life < 0.001) {\n        position = texture2D( u_emittersPositionTexture, vec2(0.0, v_uv.y) ).xyz;\n        life += 1.0;\n    } else {\n        position += curl(position * u_curlSize, u_time * 0.2, 0.2) * u_speed * u_deltaRatio;\n    }\n\n    position += texture2D( u_defaultPositionTexture, v_uv ).xyz * u_emittingSpeed * mix(1.0, u_emittingStrength, pow(life, u_emittingFriction)) * u_speed * u_deltaRatio;\n\n    float outerRatio = mix(6.0, 0.0, pow(abs(life - 0.5) *2.0, 5.0)) * u_deltaTime * 0.05 * u_outerSpeed;\n\n    position *= 1.0 + outerRatio;\n\n    // position.z -= outerRatio;\n\n    vec4 glPosition = u_projectionMatrix * vec4(position, 1.0);\n    // vec2 screenXY = glPosition.xy / glPosition.w;\n    // vec2 delta = (screenXY - u_mouse) * u_screenResolution * 0.5;\n    // float mouseRatio = u_mouseRatio * life;\n    // vec2 offset = normalize(delta) * (1.0 - smoothstep(u_mouseBound.x * mouseRatio, u_mouseBound.y * mouseRatio, length(delta))) * u_mouseStrength * mouseRatio;\n    // glPosition.xy += offset * glPosition.w;\n    // position = (u_unprojectionMatrix * glPosition).xyz;\n\n    gl_FragColor = vec4(position, life);\n\n}\n"),blending:p.NoBlending,transparent:!1,depthWrite:!1,depthTest:!1}),s=h.createRenderTarget(e,t,p.RGBAFormat,p.FloatType,p.NearestFilter,p.NearestFilter),l=s.clone(),c=s.clone(),r(),h.copy(x,s),h.copy(x,l),h.copy(x,c)}function r(){for(var e,t=d.particlesMotionTextureWidth,o=d.particlesMotionTextureHeight,r=t*o,i=new Float32Array(4*r),a=0;r>a;a++)e=4*a,i[e+0]=Math.random()-.5,i[e+1]=Math.random()-.5,i[e+2]=Math.random()-.5,i[e+3]=a%t/t;var u=new p.DataTexture(i,t,o,p.RGBAFormat,p.FloatType);u.minFilter=p.NearestFilter,u.magFilter=p.NearestFilter,u.needsUpdate=!0,u.generateMipmaps=!1,u.flipY=!1,x=n.defaultRenderTarget=u}function i(e){var t=h.getColorState();v.renderer.autoClearColor=!1;var o=c;c=l,l=s,s=o,u.uniforms.u_emittersPositionTexture.value=m.positionRenderTarget,u.uniforms.u_defaultPositionTexture.value=x,u.uniforms.u_positionTexture.value=l,u.uniforms.u_time.value+=e,u.uniforms.u_deltaTime.value=e,u.uniforms.u_curlSize.value=d.curlSize,u.uniforms.u_outerSpeed.value=d.particlesOuterSpeed,u.uniforms.u_emittingSpeed.value=d.particlesEmittingSpeed,u.uniforms.u_emittingStrength.value=d.particlesEmittingStrength,u.uniforms.u_emittingFriction.value=d.particlesEmittingFriction,u.uniforms.u_mouseRatio.value=d.mouseRatio,u.uniforms.u_mouseStrength.value=d.mouseStrength,u.uniforms.u_deltaRatio.value=d.deltaRatio,h.render(u,s),h.setColorState(t),n.positionRenderTarget=s,n.prevPositionRenderTarget=l,n.prevPrevPositionRenderTarget=c}var a,u,s,l,c,d=e(41),v=e(40),p=e(39),m=e(46),f=e(43),h=e(42),x=n.defaultRenderTarget=a;n.positionRenderTarget=a,n.prevPositionRenderTarget=a,n.prevPrevPositionRenderTarget=a,n.init=o,n.update=i,v.requireParameter("gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS",!0,"No support for vertex shader textures!"),v.requireExtension("OES_texture_float",!0,"No OES_texture_float support for float textures!")},{39:39,40:40,41:41,42:42,43:43,46:46}],49:[function(e,t,n){function o(){}function r(){}function i(e){p(this,{defines:{},uniforms:{u_particleScreenScalar:{type:"f",value:1},u_positionTexture:{type:"t",value:c},u_screenResolution:{type:"v2",value:d.resolution},u_time:{type:"f",value:0},u_initialAmimation:{type:"f",value:0}},vertexShader:"",fragmentShader:"",needsPrevPosition:!1},e),this.needsPrevPosition&&(this.uniforms.u_prevPositionTexture={type:"t",value:c}),this._initGeometry(),this._initMaterial(),this._initMesh()}function a(){for(var e,t=d.particlesMotionTextureWidth,n=d.particlesMotionTextureHeight,o=t*n,r=new Float32Array(3*o),i=0;o>i;i++)e=3*i,r[e+0]=(i%t+.5)/t,r[e+1]=(~~(i/t)+.5)/n,r[e+2]=Math.random();this.geometry=new m.BufferGeometry,this.geometry.addAttribute("position",new m.BufferAttribute(r,3))}function u(){this.material=new m.ShaderMaterial({uniforms:this.uniforms,vertexShader:this.vertexShader,fragmentShader:this.fragmentShader,defines:this.defines})}function s(){this.mesh=new m.Points(this.geometry,this.material),this.mesh.frustumCulled=!1}function l(e){this.uniforms.u_particleScreenScalar.value=d.resolution.y/1080,this.uniforms.u_positionTexture.value=v.positionRenderTarget,this.needsPrevPosition&&(this.uniforms.u_prevPositionTexture.value=v.prevPositionRenderTarget),this.uniforms.u_time.value+=e,this.uniforms.u_initialAmimation.value=d.initialAmimation}var c,d=e(41),v=e(48),p=e(21),m=e(39);t.exports=o;var f=o.prototype;f.preload=r,f.init=i,f._initGeometry=a,f._initMaterial=u,f._initMesh=s,f.update=l},{21:21,39:39,41:41,48:48}],50:[function(e,t,n){function o(){}function r(){y=x.add(d.assetPath+"images/motion_blur.png").content}function i(){S=new f.Matrix4;var e=new f.Texture(y);e.encoding=f.sRGBEncoding,e.anisotropy=8,e.needsUpdate=!0,e.flipY=!1,_.init.call(this,{uniforms:{u_size:{type:"f",value:n.size},u_randomFadeInRatio:{type:"f",value:0},u_color1:{type:"c",value:new f.Color(5608600)},u_color2:{type:"c",value:new f.Color(2636109)},u_color3:{type:"c",value:new f.Color(7501126)},u_color4:{type:"c",value:new f.Color(6569749)},u_blurTexture:{type:"t",value:e},u_prevWorldMatrix:{type:"m4",value:S},u_prevViewMatrix:{type:"m4",value:d.prevCamera.matrixWorldInverse},u_prevProjectMatrix:{type:"m4",value:d.prevCamera.projectionMatrix}},vertexShader:p("#define GLSLIFY 1\nattribute vec2 a_uv;\nattribute vec2 a_offset;\n\nuniform sampler2D u_positionTexture;\nuniform sampler2D u_prevPositionTexture;\nuniform vec2 u_screenResolution;\nuniform float u_particleScreenScalar;\nuniform float u_size;\nuniform float u_randomFadeInRatio;\n\nuniform vec3 u_color1;\nuniform vec3 u_color2;\nuniform vec3 u_color3;\nuniform vec3 u_color4;\n\nuniform mat4 u_prevWorldMatrix;\nuniform mat4 u_prevViewMatrix;\nuniform mat4 u_prevProjectMatrix;\n\nvarying float v_random;\nvarying mat2 v_rot;\nvarying vec2 v_uv;\nvarying vec3 v_normal;\nvarying vec3 v_color1;\nvarying vec3 v_color2;\n\nvoid main() {\n\n    v_random = position.z;\n\n    vec4 positionInfo = texture2D( u_positionTexture, position.xy );\n    vec4 pos = vec4(positionInfo.xyz, 1.0);\n    vec4 prevPosition = vec4(texture2D( u_prevPositionTexture, position.xy ).xyz, 1.0);\n\n    vec4 worldPosition = modelMatrix * pos;\n    v_normal = normalize(vec3(500.0) - worldPosition.xyz);\n\n    vec4 mvPosition = viewMatrix * worldPosition;\n    v_color1 = mix(u_color1,  u_color3, positionInfo.w);\n    v_color2 = mix(u_color2,  u_color4, positionInfo.w);\n\n    pos = projectionMatrix * mvPosition;\n    prevPosition = u_prevProjectMatrix * u_prevViewMatrix * u_prevWorldMatrix * prevPosition;\n    vec2 resolutionOverW = u_screenResolution / pos.w;\n    vec2 screenXY = pos.xy * resolutionOverW;\n    vec2 prevScreenXY = prevPosition.xy / prevPosition.w * u_screenResolution;\n    float rotate = atan(screenXY.y - prevScreenXY.y, screenXY.x - prevScreenXY.x) + 1.570796325;\n    vec2 rotates = vec2(sin(rotate), cos(rotate));\n    v_rot = mat2(rotates.y, rotates.x, -rotates.x, rotates.y);\n\n    float size = min(300.0, (2100.0 * u_size * position.z * u_particleScreenScalar / max(1.0, pos.z)) * smoothstep(-0.5, -0.4, -abs(fract(positionInfo.w) - 0.5)));\n    size *= smoothstep(-1.0, -1.0 + position.z * u_randomFadeInRatio, -positionInfo.w);\n\n    vec2 offset = a_offset * smoothstep(-38.0, -28.0, -size);\n\n    float scaleY = min(length(screenXY - prevScreenXY) / size * 3.0, 2.0);\n    float index = floor(scaleY * 15.5); // 0 - 31\n    float isSecondRow = step(15.5, index);\n    float revIndex = index + (47.0 - index * 2.0) * isSecondRow;\n\n    // x y\n    v_uv = vec2(\n        (mod(revIndex, 16.0)  + a_uv.x) * 0.0625,\n        isSecondRow * revIndex * 0.015625 + a_uv.y * (0.25 + index * 0.015625)\n    );\n\n    offset.y *= 1.0 + step(0.0, offset.y) * scaleY * 2.5;\n    offset = v_rot * offset;\n    pos.xy += offset / resolutionOverW * size;\n    gl_Position = pos;\n\n}\n"),fragmentShader:p("#define GLSLIFY 1\nuniform sampler2D u_blurTexture;\nuniform float u_initialAmimation;\n\nvarying float v_random;\nvarying vec3 v_color1;\nvarying vec3 v_color2;\nvarying mat2 v_rot;\nvarying vec2 v_uv;\nvarying vec3 v_normal;\n\nvoid main() {\n\n    vec4 color = texture2D( u_blurTexture, v_uv );\n\n    vec3 normal = normalize(color.xyz - 0.5);\n\n    normal.yx = v_rot * normal.yx;\n    normal.y *= -1.0;\n    normal = normalize(normal);\n\n    float light = max(0.0, dot(v_normal, normal));\n\n    color.xyz = mix(v_color1, v_color2, light);\n    color.a *= u_initialAmimation;\n\n    gl_FragColor = color;\n\n}\n"),needsPrevPosition:!0}),this.material.blending=f.AdditiveBlending,this.material.depthTest=!1,this.material.depthWrite=!1,this.material.transparent=!0}function a(){for(var e,t,n=d.particlesMotionTextureWidth,o=d.particlesMotionTextureHeight,r=n*o>>w,i=new Float32Array(6*r*3),a=new Float32Array(6*r*2),u=new Float32Array(6*r*2),s=1<<w,l=0,c=0,v=0,p=0;r>p;p++)e=(l%n+.5)/n,t=(~~(l/n)+.5)/o,i[v+0]=i[v+3]=i[v+6]=i[v+9]=i[v+12]=i[v+15]=e,i[v+1]=i[v+4]=i[v+7]=i[v+10]=i[v+13]=i[v+16]=t,i[v+2]=i[v+5]=i[v+8]=i[v+11]=i[v+14]=i[v+17]=Math.random(),a[c+0]=a[c+1]=a[c+3]=a[c+4]=a[c+7]=a[c+10]=0,a[c+2]=a[c+5]=a[c+6]=a[c+8]=a[c+9]=a[c+11]=1,u[c+0]=u[c+1]=u[c+3]=u[c+4]=u[c+7]=u[c+10]=-.5,u[c+2]=u[c+5]=u[c+6]=u[c+8]=u[c+9]=u[c+11]=.5,c+=12,v+=18,l+=s;this.geometry=new f.BufferGeometry,this.geometry.addAttribute("position",new f.BufferAttribute(i,3)),this.geometry.addAttribute("a_uv",new f.BufferAttribute(a,2)),this.geometry.addAttribute("a_offset",new f.BufferAttribute(u,2))}function u(){this.uniforms=h(f.UniformsUtils.merge([f.ShaderLib.standard.uniforms]),this.uniforms),this.material=new f.MeshPhysicalMaterial({color:16711680}),h(this.material,{type:"ShaderMaterial",uniforms:this.uniforms,vertexShader:this.vertexShader,fragmentShader:this.fragmentShader,defines:this.defines})}function s(){this.mesh=new f.Mesh(this.geometry,this.material),this.mesh.frustumCulled=!1,this.mesh.motionMaterial=new m({uniforms:h({u_prevPositionTexture:{type:"t",value:c}},this.uniforms),vertexShader:p("#define GLSLIFY 1\n//attribute vec2 a_uv;\nattribute vec2 a_offset;\n\nuniform sampler2D u_positionTexture;\nuniform sampler2D u_prevPositionTexture;\nuniform vec2 u_screenResolution;\nuniform float u_particleScreenScalar;\nuniform float u_size;\nuniform float u_randomFadeInRatio;\n\nuniform mat4 u_prevWorldMatrix;\nuniform mat4 u_prevViewMatrix;\nuniform mat4 u_prevProjectMatrix;\n\nvarying vec2 v_motion;\n\nvoid main() {\n\n    vec4 positionInfo = texture2D( u_positionTexture, position.xy );\n    vec4 pos = vec4(positionInfo.xyz, 1.0);\n    vec4 prevPosition = vec4(texture2D( u_prevPositionTexture, position.xy ).xyz, 1.0);\n\n    pos = projectionMatrix * modelViewMatrix * pos;\n    prevPosition = u_prevProjectMatrix * u_prevViewMatrix * u_prevWorldMatrix * prevPosition;\n\n    float size = min(300.0, (2100.0 * u_size * position.z * u_particleScreenScalar / max(1.0, pos.z)) * smoothstep(-0.5, -0.4, -abs(fract(positionInfo.w) - 0.5)));\n    size *= smoothstep(-1.0, -1.0 + position.z * u_randomFadeInRatio, -positionInfo.w);\n\n    vec2 screenXY = pos.xy / pos.w * u_screenResolution;\n    vec2 prevScreenXY = prevPosition.xy / prevPosition.w * u_screenResolution;\n    float rotate = atan(screenXY.y - prevScreenXY.y, screenXY.x - prevScreenXY.x) + 1.570796325;\n    vec2 rotates = vec2(sin(rotate), cos(rotate));\n\n    vec2 offset = a_offset * smoothstep(-38.0, -28.0, -size);\n    float scaleY = min(length(screenXY - prevScreenXY) / size * 3.0, 2.0);\n    offset.y *= 1.0 + step(0.0, offset.y) * scaleY * 2.5;\n    offset = mat2(rotates.y, rotates.x, -rotates.x, rotates.y) * offset;\n\n    pos.xy += offset * pos.w / u_screenResolution * size;\n    prevPosition.xy += offset * prevPosition.w / u_screenResolution * size;\n\n    gl_Position = pos;\n    v_motion = (pos.xy / pos.w - prevPosition.xy / prevPosition.w) * 0.5;\n}\n")})}function l(e){n.needsResetWorldMatrix?(n.needsResetWorldMatrix=!1,this.uniforms.u_prevWorldMatrix.value=this.mesh.matrixWorld):(S.copy(this.mesh.matrixWorld),this.uniforms.u_prevWorldMatrix.value=S),this.uniforms.u_randomFadeInRatio.value=n.randomFadeInRatio,this.uniforms.u_color1.value.lerp(this.color1,e),this.uniforms.u_color2.value.lerp(this.color2,e),this.uniforms.u_color3.value.lerp(this.color3,e),this.uniforms.u_color4.value.lerp(this.color4,e),this.mesh.motionMaterial.uniforms.u_randomFadeInRatio.value=n.randomFadeInRatio,_.update.call(this,e)}var c,d=e(41),v=e(49),p=e(43),m=e(57),f=e(39),h=e(22),x=e(27),g=o.prototype=new v,_=v.prototype;g.preload=r,g.init=i,g._initGeometry=a,g._initMaterial=u,g._initMesh=s,g.update=l;var n=t.exports=new o;n.needsResetWorldMatrix=!0,n.randomFadeInRatio=.3,n.size=2,n.color1=new f.Color(5608600),n.color2=new f.Color(2636109),n.color3=new f.Color(7501126),n.color4=new f.Color(6569749);var y,S,w=0},{22:22,27:27,39:39,41:41,43:43,49:49,57:57}],51:[function(e,t,n){function o(e){q=e,w.add("images/logo.png"),w.start(function(e){1===e&&r()})}function r(){D=document.body,N=document.querySelector("canvas"),C=document.querySelector(".ui"),L=document.querySelector(".logo"),L.addEventListener("click",a),P=document.querySelector(".quality-selector"),z=document.querySelector(".quality-title"),O=document.querySelectorAll(".quality-btn"),F=document.querySelector(".menu"),B=document.querySelector(".iframe-container"),W=document.querySelector(".titles-container"),X=document.querySelector(".titles-move-container"),Y=document.querySelector(".go-btn"),j=document.querySelector(".go-btn-bg-spinner"),X.style.width=320*V.length+"px",G=document.querySelectorAll(".arrow"),k=document.querySelector(".close-btn");for(var e,t=0,n=O.length;n>t;t++)e=O[t],e.quality=t,e.addEventListener("click",l);for(P.style.display="block",M.set(L,{y:.5*window.innerHeight-L.offsetTop-.5*L.offsetHeight,force3D:!0,opacity:0}),M.to(L,1.5,{delay:.5,opacity:1}),M.to(L,1,{delay:2,y:0,force3D:!0,ease:"easeInOutQuint"}),M.to(z,1,{delay:2.5,opacity:1}),t=0,n=O.length;n>t;t++)e=O[t],M.set(e,{opacity:0,scale:.001,force3D:!0}),M.to(e,.5,{delay:2.6+.1*t,opacity:1}),M.to(e,1,{delay:2.6+.1*t,scale:1,force3D:!0,ease:"easeOutBack"});M.delayedCall(3,function(){P.style.pointerEvents="auto",L.style.cursor="pointer",L.style.pointerEvents="auto"})}function i(){for(var e,t,n=0,o=V.length;o>n;n++)t=V[n],e=document.createElement("div"),e.innerHTML=t.title,X.appendChild(e);var r;for(n=0,o=G.length;o>n;n++)r=G[n],r.addEventListener("click",d);Y.addEventListener("click",u),Y.addEventListener("mouseenter",s),k.addEventListener("click",v),c(),M.set(W,{opacity:0}),M.to(W,1,{delay:3.5,opacity:1,onComplete:p}),M.to(I,2.5,{blurRadius:2.5,amount:1,ease:"linear"})}function a(){window.open("http://edankwan.com/")}function u(){x(V[H])}function s(e){var t=Math.atan2(-(e.pageY-.5*window.innerHeight),e.pageX-.5*window.innerWidth)+4*Math.PI;t=3-~~(t/Math.PI*2-.25)%4,j.style.transform="rotateZ("+90*t+"deg)"}function l(){P.style.pointerEvents="none";var e=b.quality=this.quality;0===e?(b.motionBlur=!1,b.particlesMotionTextureWidth=256,b.particlesMotionTextureHeight=256,A.size=3):1===e?(R.motionRenderTargetScale=.5,R.maxDistance=60,b.particlesMotionTextureWidth=256,b.particlesMotionTextureHeight=256,A.size=2.5):2===e&&(b.particlesMotionTextureWidth=512,b.particlesMotionTextureHeight=512,R.useDithering=!1,R.useFloatLinear=!0,A.size=2),M.to(z,1,{opacity:0});for(var t,n,o=0,r=O.length;r>o;o++)n=e===o?.25:0,t=O[o],M.to(t,.4,{delay:.4+n,opacity:0}),M.to(t,.8,{delay:n,scale:1e-4,force3D:!0,ease:"easeInBack"});M.delayedCall(1.5,function(){P.style.display="none",q()})}function c(){var e=V[H];G[0].classList.toggle("is-active",H>0),G[1].classList.toggle("is-active",H<V.length-1),B.style.backgroundColor=e.bgColor;for(var t=e.colors,n=0;4>n;n++)A["color"+(n+1)].setHex(t[n]);var o=e.speeds;M.to(b,2,{speed:o[0],ease:"linear"}),M.to(b,2,{curlSize:o[1],ease:"linear"}),M.to(b,2,{particlesOuterSpeed:o[2],ease:"linear"}),M.to(b,2,{particlesEmittingSpeed:o[3],ease:"linear"}),M.to(b,2,{particlesEmittingStrength:o[4],ease:"linear"}),M.to(b,2,{particlesEmittingFriction:o[5],ease:"linear"})}function d(){var e=this.classList.contains("is-left")?-1:1,t=T.clamp(H+e,0,V.length-1);if(t!==H){var n=t-H;H=t,c(),M.to(X,.5+.2*Math.abs(n),{x:320*-H,force3D:!0,ease:"easeOutQuint"});var o=850+350*Math.random(),r=(.5*Math.random()+.75)*Math.PI,i=-(.25*Math.random()+.5)*Math.PI;Q.set(o*Math.cos(i)*Math.cos(r),o*Math.sin(r),o*Math.sin(i)*Math.cos(r));var a=b.camera.position.distanceTo(Q);M.to(b.camera.position,1.5+a/1e3,{x:Q.x,y:Q.y,z:Q.z,ease:"easeInOutQuint"})}}function v(){U&&y()}function p(){F.style.display="block",M.set(G[0],{x:136,force3D:!0,opacity:0}),M.to(G[0],.8,{x:0,force3D:!0,opacity:1,ease:"easeInOutQuint"}),M.set(G[1],{x:-136,force3D:!0,opacity:0}),M.to(G[1],.8,{x:0,force3D:!0,opacity:1,ease:"easeInOutQuint"}),M.to(G[1],.8,{x:0,force3D:!0,opacity:1,ease:"easeInOutQuint"}),M.set(Y,{scale:.001,force3D:!0,opacity:0}),M.to(Y,.5,{opacity:1}),M.to(Y,.8,{scale:1,force3D:!0,ease:"easeOutBack"})}function m(){M.to(G[0],.8,{x:136,force3D:!0,opacity:0,ease:"easeInOutQuint"}),M.to(G[1],.8,{x:-136,force3D:!0,opacity:0,ease:"easeInOutQuint"}),M.to(Y,.5,{opacity:0}),M.to(Y,.8,{scale:.001,force3D:!0,ease:"easeInBack",onComplete:function(){F.style.display="none"}})}function f(){k.style.display="block",M.set(k,{scale:.001,force3D:!0,opacity:0}),M.to(k,.5,{opacity:1}),M.to(k,.8,{scale:1,force3D:!0,ease:"easeOutBack"}),b.isMobile&&(L.style.pointerEvents="none",M.to(L,.8,{scale:.001,force3D:!0,ease:"easeInBack",onComplete:function(){L.style.display="none"}}))}function h(){M.to(k,.5,{opacity:0}),M.to(k,.8,{scale:.001,force3D:!0,ease:"easeInBack",onComplete:function(){k.style.display="none"}}),b.isMobile&&(L.style.pointerEvents="auto",L.style.display="block",M.to(L,.8,{scale:1,force3D:!0,ease:"easeOutBack"}))}function x(e){D.style.pointerEvents="none",F.style.pointerEvents="none",g(),M.set(I,{ratio:0}),m(),f(),Q.copy(b.camera.position).normalize().multiplyScalar(100),M.to(b.camera.position,1,{x:Q.x,y:Q.y,z:Q.z,ease:"easeOutSine"}),M.to(W,.5,{opacity:0}),M.to(I,1,{ratio:1,blurRadius:5,amount:10,ease:"easeInOutCubic",onComplete:function(){N.style.display="none",D.style.pointerEvents="auto",b.skipRendering=!0,U=document.createElement("iframe"),B.appendChild(U),U.src=e.urls[b.qualityList[b.quality]],U.style.backgroundColor=e.bgColor,U.focus(),k.style.display="block"}})}function g(){U&&U.parentNode&&U.parentNode.removeChild(U),U=S}function _(e,t){F.style.top=~~(.5*t)+"px"}function y(){N.style.display="block",D.style.pointerEvents="none",b.skipRendering=!1,g(),p(),h(),Q.copy(b.camera.position).normalize().multiplyScalar(1e3),M.to(W,.5,{opacity:1}),M.to(b.camera.position,1,{x:Q.x,y:Q.y,z:Q.z,ease:"easeOutBack"}),M.to(I,1,{ratio:0,blurRadius:2.5,amount:1,ease:"easeOutQuint",onComplete:function(){D.style.pointerEvents="auto",F.style.pointerEvents="auto"}})}var S,w=e(27),b=e(41),T=e(60),M=e(3),E=e(39),w=e(27),R=e(58),I=e(53),A=e(50);n.preload=o,n.init=i,n.resize=_;var D,N,C,L,P,z,O,F,W,B,U,X,Y,j,G,k,q,V=window.demoList,H=0,Q=new E.Vector3},{27:27,3:3,39:39,41:41,50:50,53:53,58:58,60:60}],52:[function(e,t,n){function o(){}function r(e){d(this,{uniforms:{u_texture:{type:"t",value:u},u_resolution:{type:"v2",value:l.resolution},u_aspect:{type:"f",value:1}},enabled:!0,vertexShader:"",fragmentShader:"",isRawMaterial:!0,addRawShaderPrefix:!0},e),this.vertexShader||(this.vertexShader=this.isRawMaterial?c.vertexShader:p),this.addRawShaderPrefix&&this.isRawMaterial&&(this.vertexShader=c.rawShaderPrefix+this.vertexShader,this.fragmentShader=c.rawShaderPrefix+this.fragmentShader),this.material=new s[this.isRawMaterial?"RawShaderMaterial":"ShaderMaterial"]({uniforms:this.uniforms,vertexShader:this.vertexShader,fragmentShader:this.fragmentShader})}function i(e,t){}function a(e,t,n){return this.uniforms.u_texture.value=t,this.uniforms.u_aspect.value=this.uniforms.u_resolution.value.x/this.uniforms.u_resolution.value.y,l.render(this.material,n)}var u,s=e(39),l=e(55),c=e(42),d=e(21);t.exports=o;var v=o.prototype;v.init=r,v.resize=i,v.render=a;var p="#define GLSLIFY 1\nvarying vec2 v_uv;\n\nvoid main() {\n    v_uv = uv;\n    gl_Position = vec4( position, 1.0 );\n}\n"},{21:21,39:39,42:42,55:55}],53:[function(e,t,n){function o(){c.init.call(this,{uniforms:{u_blurTexture:{type:"t",value:i},u_amount:{type:"f",value:0},u_maxLengthRatio:{type:"f",value:0}},fragmentShader:"#define GLSLIFY 1\nuniform sampler2D u_texture;\nuniform sampler2D u_blurTexture;\nuniform float u_aspect;\nuniform float u_resolution;\n\nuniform float u_amount;\nuniform float u_maxLengthRatio;\n\nvarying vec2 v_uv;\n\nvoid main()\n{\n\n    vec3 baseColor = texture2D(u_texture, v_uv).rgb;\n    vec3 blurColor = texture2D(u_blurTexture, v_uv).rgb;\n    vec3 color = mix(baseColor, 1.0 - ((1.0 - baseColor) * (1.0 - blurColor)), u_amount);\n    // vec3 color = mix(baseColor, max(baseColor, blurColor), u_amount);\n\n    float alpha = 1.0;\n\n    vec2 pos = v_uv - 0.5;\n    pos.x *= u_aspect;\n\n    alpha = 1.0 - clamp(\n        step(-1.0, -abs(pos.y / (pos.x + u_maxLengthRatio))) +\n        step(-1.0, -abs(pos.x / (pos.y + u_maxLengthRatio))) +\n        step(-1.0, -abs(pos.y / (pos.x - u_maxLengthRatio))) +\n        step(-1.0, -abs(pos.x / (pos.y - u_maxLengthRatio))) - 3.0,\n        0.0,\n        1.0\n    );\n\n    gl_FragColor = vec4(color, alpha);\n\n}\n",transparent:!0}),d=new l.RawShaderMaterial({uniforms:{u_texture:{type:"t",value:i},u_delta:{type:"v2",value:new l.Vector2}},vertexShader:s.vertexShader,fragmentShader:s.rawShaderPrefix+"#define GLSLIFY 1\nuniform sampler2D u_texture;\nuniform vec2 u_delta;\n\nvarying vec2 v_uv;\n\nvoid main()\n{\n\n    vec3 color = texture2D( u_texture, v_uv ).rgb * 0.1633;\n\n    vec2 delta = u_delta;\n    color += texture2D( u_texture,  v_uv - delta ).rgb * 0.1531;\n    color += texture2D( u_texture,  v_uv + delta ).rgb * 0.1531;\n\n    delta += u_delta;\n    color += texture2D( u_texture,  v_uv - delta ).rgb * 0.12245;\n    color += texture2D( u_texture,  v_uv + delta ).rgb * 0.12245;\n\n    delta += u_delta;\n    color += texture2D( u_texture,  v_uv - delta ).rgb * 0.0918;\n    color += texture2D( u_texture,  v_uv + delta ).rgb * 0.0918;\n\n    delta += u_delta;\n    color += texture2D( u_texture,  v_uv - delta ).rgb * 0.051;\n    color += texture2D( u_texture,  v_uv + delta ).rgb * 0.051;\n\n    gl_FragColor = vec4(color, 1.0);\n\n}\n"})}function r(e,t,o){var r=s.getColorState();if(u.renderer.autoClearColor=!0,u.renderer.setClearColor(0,0),n.amount){var i=u.getRenderTarget(v),a=u.getRenderTarget(v);u.releaseRenderTarget(i,a);var l=n.blurRadius;d.uniforms.u_texture.value=t,d.uniforms.u_delta.value.set(l/u.resolution.x,0),s.render(d,i),l=n.blurRadius,d.uniforms.u_texture.value=i,d.uniforms.u_delta.value.set(0,l/u.resolution.y),s.render(d,a),this.uniforms.u_blurTexture.value=a,this.uniforms.u_amount.value=n.amount,this.uniforms.u_maxLengthRatio.value=Math.max(1e-5,(this.uniforms.u_aspect.value+1)*n.ratio*.5),c.render.call(this,e,t,o)}s.setColorState(r)}var i,a=e(52),u=e(55),s=e(42),l=e(39),n=t.exports=new a,c=a.prototype;n.init=o,n.render=r,n.blurRadius=0,n.amount=1e-4,n.ratio=0;var d,v=1},{39:39,42:42,52:52,55:55}],54:[function(e,t,n){function o(){l.init.call(this,{uniforms:{u_distanceTexture:{type:"t",value:i},u_lowerBound:{type:"v2",value:n.lowerBound},u_upperBound:{type:"v2",value:n.upperBound},u_delta:{type:"v2",value:new s.Vector2},u_amount:{type:"f",value:1}},fragmentShader:"#define GLSLIFY 1\nuniform sampler2D u_texture;\nuniform sampler2D u_distanceTexture;\n\nuniform vec2 u_resolution;\nuniform vec2 u_lowerBound;\nuniform vec2 u_upperBound;\nuniform vec2 u_delta;\nuniform float u_amount;\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n#define LOG2 1.442695\n\nvoid main() {\n\n    vec2 resolutionInverted = 1.0 / u_resolution;\n    vec2 uv = gl_FragCoord.xy * resolutionInverted;\n\n    vec2 depthInfo = texture2D( u_distanceTexture, uv ).ba;\n    float depth = depthInfo.x / depthInfo.y;\n    float fogFactor = max(smoothstep(-u_lowerBound.y, -u_lowerBound.x, -depth), smoothstep(u_upperBound.x, u_upperBound.y, depth));\n    vec2 d = u_delta * resolutionInverted * fogFactor * u_amount;\n\n    vec4 sum = vec4(0.0);\n    vec4 center = texture2D( u_texture, uv );\n    d *= length(center.xyz);\n    sum += texture2D( u_texture, ( uv - d * 4. ) ) * 0.051;\n    sum += texture2D( u_texture, ( uv - d * 3. ) ) * 0.0918;\n    sum += texture2D( u_texture, ( uv - d * 2. ) ) * 0.12245;\n    sum += texture2D( u_texture, ( uv - d * 1. ) ) * 0.1531;\n    sum += center * 0.1633;\n    sum += texture2D( u_texture, ( uv + d * 1. ) ) * 0.1531;\n    sum += texture2D( u_texture, ( uv + d * 2. ) ) * 0.12245;\n    sum += texture2D( u_texture, ( uv + d * 3. ) ) * 0.0918;\n    sum += texture2D( u_texture, ( uv + d * 4. ) ) * 0.051;\n\n    gl_FragColor = sum;\n}\n"})}function r(e,t,o){n.amount&&(u.renderMotion(),u.motionNeedUpdate=!1,n.lowerBound.x>n.lowerBound.y&&(n.lowerBound.x=n.lowerBound.y),n.upperBound.x>n.upperBound.y&&(n.upperBound.x=n.upperBound.y),this.uniforms.u_amount.value=n.amount,this.uniforms.u_distanceTexture.value=u.motionRenderTarget,this.uniforms.u_delta.value.set(1,0),t=l.render.call(this,e,t),this.uniforms.u_delta.value.set(0,1),l.render.call(this,e,t,o))}var i,a=(e(41),e(52)),u=e(58),s=e(39),n=t.exports=new a,l=a.prototype;n.init=o,n.render=r,n.amount=0,n.lowerBound=new s.Vector2(100,150),n.upperBound=new s.Vector2(350,800)},{39:39,41:41,52:52,58:58}],55:[function(e,t,n){function o(e,t,o){
g=n.fromRenderTarget=f.createRenderTarget(),_=n.toRenderTarget=f.createRenderTarget(),g.depthBuffer=!0,g.stencilBuffer=!0,_.depthBuffer=!0,_.stencilBuffer=!0,y=n.resolution=new m.Vector2,n.renderer=e,n.scene=t,n.camera=o}function r(e,t){y.set(e,t),g.setSize(e,t),_.setSize(e,t),n.camera.aspect=e/t,n.camera.updateProjectionMatrix(),n.renderer.setSize(e,t);for(var o=0,r=x.length;r>o;o++)x[o].resize(e,t)}function i(e){return e.enabled}function a(e){var t=x.filter(i);if(t.length){n.renderer.render(n.scene,n.camera,_),l();for(var o,r=0,a=t.length;a>r;r++)o=t[r],o.render(e,g,r===a-1)}else n.renderer.render(n.scene,n.camera)}function u(e,t,o){t=t||n.scene,o=o||n.camera,e?n.renderer.render(t,o,e):n.renderer.render(t,o)}function s(e,t){return f.render(e,t?p:_),l(),g}function l(){var e=_;_=n.toRenderTarget=g,g=n.fromRenderTarget=e}function c(e,t){e=e||0,t=+(t||0);var n,o=y.x>>e,r=y.y>>e,i=e+"_"+t,a=v(i);return a.length?(n=a.pop(),h(n,b)):(n=f.createRenderTarget(o,r,t?m.RGBAFormat:m.RGBFormat),n._listId=i,w[i]=w[i]||0),w[i]++,n.width===o&&n.height===r||n.setSize(o,r),n}function d(e){for(var t,n,o,r,i,a=arguments,u=0,s=a.length;s>u;u++){for(e=a[u],r=e._listId,i=v(r),t=!1,w[r]--,n=0,o=i.length;o>n;n++)if(i[n]===e){t=!0;break}t||i.push(e)}}function v(e){return S[e]||(S[e]=[])}var p,m=e(39),f=e(42),h=e(21);n.init=o,n.resize=r,n.renderQueue=a,n.renderScene=u,n.render=s,n.swapRenderTarget=l,n.getRenderTarget=c,n.releaseRenderTarget=d,n.resolution=p;var x=n.queue=[],g=n.fromRenderTarget=p,_=n.toRenderTarget=p,y=n.resolution=p,S={},w={},b={depthBuffer:!1,texture:{generateMipmaps:!1}};n.renderer=p,n.scene=p,n.camera=p},{21:21,39:39,42:42}],56:[function(e,t,n){function o(e){var t=e?"#define GLSLIFY 1\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform vec2 u_resolution;\n\nvarying vec2 v_uv;\n\n//To save 9 dependent texture reads, you can compute\n//these in the vertex shader and use the optimized\n//frag.glsl function in your frag shader. \n\n//This is best suited for mobile devices, like iOS.\n\nvoid texcoords(vec2 fragCoord, vec2 resolution,\n			out vec2 v_rgbNW, out vec2 v_rgbNE,\n			out vec2 v_rgbSW, out vec2 v_rgbSE,\n			out vec2 v_rgbM) {\n	vec2 inverseVP = 1.0 / resolution.xy;\n	v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\n	v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\n	v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\n	v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\n	v_rgbM = vec2(fragCoord * inverseVP);\n}\n\nvoid main() {\n\n   vec2 fragCoord = uv * u_resolution;\n   texcoords(fragCoord, u_resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n\n    v_uv = uv;\n    gl_Position = vec4( position, 1.0 );\n\n}\n":"",n=e?'#define GLSLIFY 1\nvarying vec2 v_rgbNW;\nvarying vec2 v_rgbNE;\nvarying vec2 v_rgbSW;\nvarying vec2 v_rgbSE;\nvarying vec2 v_rgbM;\n\nuniform vec2 u_resolution;\nuniform sampler2D u_texture;\n\nvarying vec2 v_uv;\n\n/**\nBasic FXAA implementation based on the code on geeks3d.com with the\nmodification that the texture2DLod stuff was removed since it\'s\nunsupported by WebGL.\n\n--\n\nFrom:\nhttps://github.com/mitsuhiko/webgl-meincraft\n\nCopyright (c) 2011 by Armin Ronacher.\n\nSome rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n\n    * The names of the contributors may not be used to endorse or\n      promote products derived from this software without specific\n      prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n#ifndef FXAA_REDUCE_MIN\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\n#endif\n#ifndef FXAA_REDUCE_MUL\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\n#endif\n#ifndef FXAA_SPAN_MAX\n    #define FXAA_SPAN_MAX     8.0\n#endif\n\n//optimized version for mobile, where dependent \n//texture reads can be a bottleneck\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\n            vec2 v_rgbNW, vec2 v_rgbNE, \n            vec2 v_rgbSW, vec2 v_rgbSE, \n            vec2 v_rgbM) {\n    vec4 color;\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\n    vec4 texColor = texture2D(tex, v_rgbM);\n    vec3 rgbM  = texColor.xyz;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n    \n    mediump vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n    \n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n    \n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n              dir * rcpDirMin)) * inverseVP;\n    \n    vec3 rgbA = 0.5 * (\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\n\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, texColor.a);\n    else\n        color = vec4(rgbB, texColor.a);\n    return color;\n}\n\nvoid main() {\n\n    vec2 fragCoord = v_uv * u_resolution;\n\n    gl_FragColor = fxaa(u_texture, fragCoord, u_resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n\n}\n':'#define GLSLIFY 1\nuniform vec2 u_resolution;\nuniform sampler2D u_texture;\n\n/**\nBasic FXAA implementation based on the code on geeks3d.com with the\nmodification that the texture2DLod stuff was removed since it\'s\nunsupported by WebGL.\n\n--\n\nFrom:\nhttps://github.com/mitsuhiko/webgl-meincraft\n\nCopyright (c) 2011 by Armin Ronacher.\n\nSome rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n\n    * The names of the contributors may not be used to endorse or\n      promote products derived from this software without specific\n      prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n#ifndef FXAA_REDUCE_MIN\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\n#endif\n#ifndef FXAA_REDUCE_MUL\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\n#endif\n#ifndef FXAA_SPAN_MAX\n    #define FXAA_SPAN_MAX     8.0\n#endif\n\n//optimized version for mobile, where dependent \n//texture reads can be a bottleneck\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\n            vec2 v_rgbNW, vec2 v_rgbNE, \n            vec2 v_rgbSW, vec2 v_rgbSE, \n            vec2 v_rgbM) {\n    vec4 color;\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\n    vec4 texColor = texture2D(tex, v_rgbM);\n    vec3 rgbM  = texColor.xyz;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n    \n    mediump vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n    \n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n    \n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n              dir * rcpDirMin)) * inverseVP;\n    \n    vec3 rgbA = 0.5 * (\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\n\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, texColor.a);\n    else\n        color = vec4(rgbB, texColor.a);\n    return color;\n}\n\n//To save 9 dependent texture reads, you can compute\n//these in the vertex shader and use the optimized\n//frag.glsl function in your frag shader. \n\n//This is best suited for mobile devices, like iOS.\n\nvoid texcoords(vec2 fragCoord, vec2 resolution,\n			out vec2 v_rgbNW, out vec2 v_rgbNE,\n			out vec2 v_rgbSW, out vec2 v_rgbSE,\n			out vec2 v_rgbM) {\n	vec2 inverseVP = 1.0 / resolution.xy;\n	v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\n	v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\n	v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\n	v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\n	v_rgbM = vec2(fragCoord * inverseVP);\n}\n\nvec4 apply(sampler2D tex, vec2 fragCoord, vec2 resolution) {\n	mediump vec2 v_rgbNW;\n	mediump vec2 v_rgbNE;\n	mediump vec2 v_rgbSW;\n	mediump vec2 v_rgbSE;\n	mediump vec2 v_rgbM;\n\n	//compute the texture coords\n	texcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n	\n	//compute FXAA\n	return fxaa(tex, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n}\n\nvoid main() {\n    gl_FragColor = apply(u_texture, gl_FragCoord.xy, u_resolution);\n}\n';i.init.call(this,{uniforms:{},vertexShader:t,fragmentShader:n})}var r=e(52);t.exports=new r;var i=r.prototype;t.exports.init=o},{52:52}],57:[function(e,t,n){function o(e){e=e||{};var t=e.uniforms||{},n="#define GLSLIFY 1\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\nuniform mat4 u_prevModelViewMatrix;\n\nvarying vec2 v_motion;\n\nvoid main() {\n\n    #include <skinbase_vertex>\n    #include <begin_vertex>\n\n    #include <morphtarget_vertex>\n    #include <skinning_vertex>\n\n    vec4 pos = projectionMatrix * modelViewMatrix * vec4( transformed, 1.0 );\n    vec4 prevPos = projectionMatrix * u_prevModelViewMatrix * vec4( transformed, 1.0 );\n    gl_Position = pos;\n    v_motion = (pos.xy / pos.w - prevPos.xy / prevPos.w) * 0.5;\n\n}\n",o="#define GLSLIFY 1\nuniform float u_motionMultiplier;\n\nvarying vec2 v_motion;\n\nvoid main() {\n\n        gl_FragColor = vec4( v_motion * u_motionMultiplier, gl_FragCoord.z, 1.0 );\n\n}\n";r.ShaderMaterial.call(this,a({uniforms:i(t,{u_prevModelViewMatrix:{type:"m4",value:new r.Matrix4},u_motionMultiplier:{type:"f",value:1}}),vertexShader:n,fragmentShader:o,blending:r.NoBlending},e))}var r=e(39),i=e(15),a=e(22),u=o.prototype=Object.create(r.ShaderMaterial.prototype);u.constructor=o,t.exports=o},{15:15,22:22,39:39}],58:[function(e,t,n){function o(){var e=n.useFloatLinear?f.LinearFilter:f.NearestFilter,t=p.renderer.getContext();t.getExtension("OES_texture_float")&&t.getExtension("OES_texture_float_linear")||(e=f.NearestFilter),E=n.motionRenderTarget=m.createRenderTarget(1,1,f.RGBAFormat,f.FloatType,e,e),x=m.createRenderTarget(1,1,f.RGBAFormat,f.FloatType,e,e),_=new f.Camera,_.position.z=1,y=new f.Scene,h.init.call(this,{uniforms:{u_lineAlphaMultiplier:{type:"f",value:1},u_linesTexture:{type:"t",value:x}},fragmentShader:"#define GLSLIFY 1\nuniform sampler2D u_texture;\nuniform sampler2D u_linesTexture;\nuniform float u_lineAlphaMultiplier;\n\nvarying vec2 v_uv;\n\nvoid main() {\n\n    vec3 base = texture2D( u_texture, v_uv.xy ).rgb;\n    vec4 lines = texture2D( u_linesTexture, v_uv.xy );\n\n    vec3 color = (base + lines.rgb * u_lineAlphaMultiplier) / (lines.a * u_lineAlphaMultiplier + 1.0);\n\n    gl_FragColor = vec4( color, 1.0 );\n\n}\n",enabled:d.motionBlur}),S=[],b=new f.BufferGeometry,T=new f.RawShaderMaterial({uniforms:{u_texture:{type:"t",value:c},u_motionTexture:{type:"t",value:E},u_resolution:{type:"v2",value:p.resolution},u_maxDistance:{type:"f",value:1},u_jitter:{type:"f",value:.3},u_fadeStrength:{type:"f",value:1},u_motionMultiplier:{type:"f",value:1},u_depthTest:{type:"f",value:0},u_opacity:{type:"f",value:1},u_leaning:{type:"f",value:.5}},vertexShader:m.rawShaderPrefix+"#define GLSLIFY 1\nattribute vec3 position;\n\nuniform sampler2D u_texture;\nuniform sampler2D u_motionTexture;\n\nuniform vec2 u_resolution;\nuniform float u_maxDistance;\nuniform float u_jitter;\nuniform float u_motionMultiplier;\nuniform float u_leaning;\n\nvarying vec3 v_color;\nvarying float v_ratio;\nvarying float v_depth;\nvarying vec2 v_uv;\n\nvoid main() {\n\n    v_color = texture2D( u_texture, position.xy ).rgb;\n\n    float side = step(0.001, position.z);\n\n    v_ratio = side;\n\n    vec3 motion = texture2D( u_motionTexture, position.xy ).xyz;\n    v_depth = motion.z;\n\n    vec2 offset = motion.xy * u_resolution * u_motionMultiplier;\n    float offsetDistance = length(offset);\n    if(offsetDistance > u_maxDistance) {\n        offset = normalize(offset) * u_maxDistance;\n    }\n\n    vec2 pos = position.xy * 2.0 - 1.0 - offset / u_resolution * 2.0 * (1.0 - position.z * u_jitter) * (side - u_leaning);\n    v_uv = pos * 0.5 + 0.5;\n\n    gl_Position = vec4( pos, 0.0, 1.0 );\n\n}\n",fragmentShader:m.rawShaderPrefix+"#define GLSLIFY 1\nuniform sampler2D u_motionTexture;\nuniform float u_depthTest;\nuniform float u_opacity;\nuniform float u_leaning;\nuniform float u_fadeStrength;\nuniform float u_depthBias;\nuniform float u_useDepthWeight;\n\nvarying vec3 v_color;\nvarying float v_ratio;\nvarying float v_depth;\nvarying vec2 v_uv;\n\nvoid main() {\n\n    vec3 motion = texture2D( u_motionTexture, v_uv ).xyz;\n\n    float alpha = smoothstep(0.0, u_leaning, v_ratio) * (1.0 - smoothstep (u_leaning, 1.0, v_ratio));\n\n    alpha = pow(alpha, u_fadeStrength) * u_opacity;\n\n    if(alpha < 0.00392157) {\n        discard;\n    }\n\n    float threshold = v_depth * step(0.0001, motion.z);\n    alpha *= max(1.0 - u_depthTest, smoothstep(threshold - u_depthBias, threshold, motion.z));\n\n    gl_FragColor = vec4( v_color * alpha, alpha );\n\n}\n",blending:f.CustomBlending,blendEquation:f.AddEquation,blendSrc:f.OneFactor,blendDst:f.OneFactor,blendEquationAlpha:f.AddEquation,blendSrcAlpha:f.OneFactor,blendDstAlpha:f.OneFactor,depthTest:!1,depthWrite:!1,transparent:!0}),g=new f.LineSegments(b,T),y.add(g)}function r(e,t){var o=~~(e*n.motionRenderTargetScale),r=~~(t*n.motionRenderTargetScale);E.setSize(o,r);var a=~~(e*n.linesRenderTargetScale),u=~~(t*n.linesRenderTargetScale);x.setSize(a,u);var s,l=!n.useDithering,c=l?a*u:i(a,u),d=S.length/6;c>d&&(S=new Float32Array(6*c),w=new f.BufferAttribute(S,3),b.removeAttribute("position"),b.addAttribute("position",w));var v,p,m=0,h=a*u;for(s=0;h>s;s++)v=s%a,p=~~(s/a),(l||v+(1&p)&1)&&(S[m+0]=S[m+3]=(v+.5)/a,S[m+1]=S[m+4]=(p+.5)/u,S[m+2]=0,S[m+5]=.001+.999*Math.random(),m+=6);w.needsUpdate=!0,b.drawRange.count=2*c,M=n.useDithering}function i(e,t){return 1&e&&1&t?((e-1)*(t-1)>>1)+(e>>1)+(t>>1):e*t>>1}function a(){var e=m.getColorState();p.renderer.setClearColor(0,1),p.renderer.clearTarget(E,!0),p.scene.traverseVisible(s),p.renderScene(E);for(var t=0,n=R.length;n>t;t++)l(R[t]);R=[],m.setColorState(e)}function u(e,t,o){M!==n.useDithering&&r(p.resolution.x,p.resolution.y);var i=m.getColorState();n.motionNeedUpdate&&a(),T.uniforms.u_maxDistance.value=n.maxDistance,T.uniforms.u_jitter.value=n.jitter,T.uniforms.u_fadeStrength.value=n.fadeStrength,T.uniforms.u_motionMultiplier.value=n.motionMultiplier,T.uniforms.u_depthTest.value=n.depthTest,T.uniforms.u_opacity.value=n.opacity,T.uniforms.u_leaning.value=Math.max(.001,Math.min(.999,n.leaning)),T.uniforms.u_texture.value=t,p.renderer.setClearColor(0,0),p.renderer.clearTarget(x,!0),p.renderer.render(y,_,x),m.setColorState(i),this.uniforms.u_lineAlphaMultiplier.value=1+n.useDithering,h.render.call(this,e,t,o),n.motionNeedUpdate=!0}function s(e){e.motionMaterial?(e._tmpMaterial=e.material,e.material=e.motionMaterial):e.material&&(e.visible=!1),R.push(e)}function l(e){e.motionMaterial?(e.material=e._tmpMaterial,e._tmpMaterial=c,n.skipMatrixUpdate||e.motionMaterial.uniforms.u_prevModelViewMatrix.value.copy(e.modelViewMatrix)):e.visible=!0}var c,d=e(41),v=e(52),p=e(55),m=e(42),f=e(39),n=t.exports=new v,h=v.prototype;n.init=o,n.resize=r,n.renderMotion=a,n.render=u,n.skipMatrixUpdate=!1,n.depthTest=!1,n.jitter=0,n.fadeStrength=2,n.motionMultiplier=6,n.maxDistance=120,n.opacity=.3,n.leaning=.05,n.useDithering=!0,n.motionNeedUpdate=!0,n.useFloatLinear=!1,n.motionRenderTargetScale=1,n.linesRenderTargetScale=.5;var x,g,_,y,S,w,b,T,M,E=n.motionRenderTarget=c,R=[]},{39:39,41:41,42:42,52:52,55:55}],59:[function(e,t,n){function o(e,t,n){v=e,p=t,m=m,u.init(e,t,n),s.init(),c.init(),l.init(),u.queue.push(s),u.queue.push(c),u.queue.push(l)}function r(e,t){u.resize(e,t)}function i(e){u.renderQueue(e),n.visualizeTarget&&d.copy(n.visualizeTarget)}var a,u=(e(41),e(55)),s=e(56),l=e(53),c=e(58),d=e(42);n.init=o,n.resize=r,n.render=i,n.visualizeTarget=a;var v,p,m},{41:41,42:42,53:53,55:55,56:56,58:58}],60:[function(e,t,n){function o(e,t){return e>t?0:1}function r(e,t,n){return n=u(e,t,n),n*n(3-2*n)}function i(e,t,n){return t>e?t:e>n?n:e}function a(e,t,n){return 0>=n?e:n>=1?t:e+(t-e)*n}function u(e,t,n){return e>=n?0:n>=t?1:(n-e)/(t-e)}function s(e,t,n){return e+(t-e)*n}function l(e,t,n){return(n-e)/(t-e)}function c(e){return e-Math.floor(e)}function d(e){return c(43758.5453123*Math.sin(e))}function v(e,t){return c(43758.5453*Math.sin(12.9898*e+4.1414*t))}function p(e){return e?0>e?-1:1:0}for(var m in Math)n[m]=Math[m];n.step=o,n.smoothstep=r,n.clamp=i,n.mix=n.lerp=a,n.unMix=n.unLerp=u,n.unClampedMix=n.unClampedLerp=s,n.upClampedUnMix=n.unClampedUnLerp=l,n.fract=c,n.hash=d,n.hash2=v,n.sign=p;var f=Math.PI;n.TAU=2*f},{}]},{},[44]);